
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001224  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00001224  000012b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007c  0080007c  000012d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001304  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018aa  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000755  00000000  00000000  00002cb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c46  00000000  00000000  00003407  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  00004050  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000654  00000000  00000000  000042ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c88  00000000  00000000  00004900  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00006588  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 39 03 	jmp	0x672	; 0x672 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e2       	ldi	r30, 0x24	; 36
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 37       	cpi	r26, 0x7E	; 126
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <main>
      8a:	0c 94 10 09 	jmp	0x1220	; 0x1220 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z9pinChangeii>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
      92:	67 2b       	or	r22, r23
      94:	09 f0       	breq	.+2      	; 0x98 <_Z9pinChangeii+0x6>
      96:	df c0       	rjmp	.+446    	; 0x256 <_Z9pinChangeii+0x1c4>
      98:	00 97       	sbiw	r24, 0x00	; 0
      9a:	21 f4       	brne	.+8      	; 0xa4 <_Z9pinChangeii+0x12>
      9c:	8b b3       	in	r24, 0x1b	; 27
      9e:	8e 7f       	andi	r24, 0xFE	; 254
      a0:	8b bb       	out	0x1b, r24	; 27
      a2:	08 95       	ret
      a4:	81 30       	cpi	r24, 0x01	; 1
      a6:	91 05       	cpc	r25, r1
      a8:	21 f4       	brne	.+8      	; 0xb2 <_Z9pinChangeii+0x20>
      aa:	8b b3       	in	r24, 0x1b	; 27
      ac:	8d 7f       	andi	r24, 0xFD	; 253
      ae:	8b bb       	out	0x1b, r24	; 27
      b0:	08 95       	ret
      b2:	82 30       	cpi	r24, 0x02	; 2
      b4:	91 05       	cpc	r25, r1
      b6:	21 f4       	brne	.+8      	; 0xc0 <_Z9pinChangeii+0x2e>
      b8:	8b b3       	in	r24, 0x1b	; 27
      ba:	8b 7f       	andi	r24, 0xFB	; 251
      bc:	8b bb       	out	0x1b, r24	; 27
      be:	08 95       	ret
      c0:	83 30       	cpi	r24, 0x03	; 3
      c2:	91 05       	cpc	r25, r1
      c4:	21 f4       	brne	.+8      	; 0xce <_Z9pinChangeii+0x3c>
      c6:	8b b3       	in	r24, 0x1b	; 27
      c8:	87 7f       	andi	r24, 0xF7	; 247
      ca:	8b bb       	out	0x1b, r24	; 27
      cc:	08 95       	ret
      ce:	84 30       	cpi	r24, 0x04	; 4
      d0:	91 05       	cpc	r25, r1
      d2:	21 f4       	brne	.+8      	; 0xdc <_Z9pinChangeii+0x4a>
      d4:	8b b3       	in	r24, 0x1b	; 27
      d6:	8f 7e       	andi	r24, 0xEF	; 239
      d8:	8b bb       	out	0x1b, r24	; 27
      da:	08 95       	ret
      dc:	85 30       	cpi	r24, 0x05	; 5
      de:	91 05       	cpc	r25, r1
      e0:	21 f4       	brne	.+8      	; 0xea <_Z9pinChangeii+0x58>
      e2:	8b b3       	in	r24, 0x1b	; 27
      e4:	8f 7d       	andi	r24, 0xDF	; 223
      e6:	8b bb       	out	0x1b, r24	; 27
      e8:	08 95       	ret
      ea:	86 30       	cpi	r24, 0x06	; 6
      ec:	91 05       	cpc	r25, r1
      ee:	21 f4       	brne	.+8      	; 0xf8 <_Z9pinChangeii+0x66>
      f0:	8b b3       	in	r24, 0x1b	; 27
      f2:	8f 7b       	andi	r24, 0xBF	; 191
      f4:	8b bb       	out	0x1b, r24	; 27
      f6:	08 95       	ret
      f8:	87 30       	cpi	r24, 0x07	; 7
      fa:	91 05       	cpc	r25, r1
      fc:	21 f4       	brne	.+8      	; 0x106 <_Z9pinChangeii+0x74>
      fe:	8b b3       	in	r24, 0x1b	; 27
     100:	8f 77       	andi	r24, 0x7F	; 127
     102:	8b bb       	out	0x1b, r24	; 27
     104:	08 95       	ret
     106:	8a 30       	cpi	r24, 0x0A	; 10
     108:	91 05       	cpc	r25, r1
     10a:	21 f4       	brne	.+8      	; 0x114 <_Z9pinChangeii+0x82>
     10c:	88 b3       	in	r24, 0x18	; 24
     10e:	8e 7f       	andi	r24, 0xFE	; 254
     110:	88 bb       	out	0x18, r24	; 24
     112:	08 95       	ret
     114:	8b 30       	cpi	r24, 0x0B	; 11
     116:	91 05       	cpc	r25, r1
     118:	21 f4       	brne	.+8      	; 0x122 <_Z9pinChangeii+0x90>
     11a:	88 b3       	in	r24, 0x18	; 24
     11c:	8d 7f       	andi	r24, 0xFD	; 253
     11e:	88 bb       	out	0x18, r24	; 24
     120:	08 95       	ret
     122:	8c 30       	cpi	r24, 0x0C	; 12
     124:	91 05       	cpc	r25, r1
     126:	21 f4       	brne	.+8      	; 0x130 <_Z9pinChangeii+0x9e>
     128:	88 b3       	in	r24, 0x18	; 24
     12a:	8b 7f       	andi	r24, 0xFB	; 251
     12c:	88 bb       	out	0x18, r24	; 24
     12e:	08 95       	ret
     130:	8d 30       	cpi	r24, 0x0D	; 13
     132:	91 05       	cpc	r25, r1
     134:	21 f4       	brne	.+8      	; 0x13e <_Z9pinChangeii+0xac>
     136:	88 b3       	in	r24, 0x18	; 24
     138:	87 7f       	andi	r24, 0xF7	; 247
     13a:	88 bb       	out	0x18, r24	; 24
     13c:	08 95       	ret
     13e:	8e 30       	cpi	r24, 0x0E	; 14
     140:	91 05       	cpc	r25, r1
     142:	21 f4       	brne	.+8      	; 0x14c <_Z9pinChangeii+0xba>
     144:	88 b3       	in	r24, 0x18	; 24
     146:	8f 7e       	andi	r24, 0xEF	; 239
     148:	88 bb       	out	0x18, r24	; 24
     14a:	08 95       	ret
     14c:	8f 30       	cpi	r24, 0x0F	; 15
     14e:	91 05       	cpc	r25, r1
     150:	21 f4       	brne	.+8      	; 0x15a <_Z9pinChangeii+0xc8>
     152:	88 b3       	in	r24, 0x18	; 24
     154:	8f 7d       	andi	r24, 0xDF	; 223
     156:	88 bb       	out	0x18, r24	; 24
     158:	08 95       	ret
     15a:	80 31       	cpi	r24, 0x10	; 16
     15c:	91 05       	cpc	r25, r1
     15e:	21 f4       	brne	.+8      	; 0x168 <_Z9pinChangeii+0xd6>
     160:	88 b3       	in	r24, 0x18	; 24
     162:	8f 7b       	andi	r24, 0xBF	; 191
     164:	88 bb       	out	0x18, r24	; 24
     166:	08 95       	ret
     168:	81 31       	cpi	r24, 0x11	; 17
     16a:	91 05       	cpc	r25, r1
     16c:	21 f4       	brne	.+8      	; 0x176 <_Z9pinChangeii+0xe4>
     16e:	88 b3       	in	r24, 0x18	; 24
     170:	8f 77       	andi	r24, 0x7F	; 127
     172:	88 bb       	out	0x18, r24	; 24
     174:	08 95       	ret
     176:	84 31       	cpi	r24, 0x14	; 20
     178:	91 05       	cpc	r25, r1
     17a:	21 f4       	brne	.+8      	; 0x184 <_Z9pinChangeii+0xf2>
     17c:	85 b3       	in	r24, 0x15	; 21
     17e:	8e 7f       	andi	r24, 0xFE	; 254
     180:	85 bb       	out	0x15, r24	; 21
     182:	08 95       	ret
     184:	85 31       	cpi	r24, 0x15	; 21
     186:	91 05       	cpc	r25, r1
     188:	21 f4       	brne	.+8      	; 0x192 <_Z9pinChangeii+0x100>
     18a:	85 b3       	in	r24, 0x15	; 21
     18c:	8d 7f       	andi	r24, 0xFD	; 253
     18e:	85 bb       	out	0x15, r24	; 21
     190:	08 95       	ret
     192:	86 31       	cpi	r24, 0x16	; 22
     194:	91 05       	cpc	r25, r1
     196:	21 f4       	brne	.+8      	; 0x1a0 <_Z9pinChangeii+0x10e>
     198:	85 b3       	in	r24, 0x15	; 21
     19a:	8b 7f       	andi	r24, 0xFB	; 251
     19c:	85 bb       	out	0x15, r24	; 21
     19e:	08 95       	ret
     1a0:	87 31       	cpi	r24, 0x17	; 23
     1a2:	91 05       	cpc	r25, r1
     1a4:	21 f4       	brne	.+8      	; 0x1ae <_Z9pinChangeii+0x11c>
     1a6:	85 b3       	in	r24, 0x15	; 21
     1a8:	87 7f       	andi	r24, 0xF7	; 247
     1aa:	85 bb       	out	0x15, r24	; 21
     1ac:	08 95       	ret
     1ae:	88 31       	cpi	r24, 0x18	; 24
     1b0:	91 05       	cpc	r25, r1
     1b2:	21 f4       	brne	.+8      	; 0x1bc <_Z9pinChangeii+0x12a>
     1b4:	85 b3       	in	r24, 0x15	; 21
     1b6:	8f 7e       	andi	r24, 0xEF	; 239
     1b8:	85 bb       	out	0x15, r24	; 21
     1ba:	08 95       	ret
     1bc:	89 31       	cpi	r24, 0x19	; 25
     1be:	91 05       	cpc	r25, r1
     1c0:	21 f4       	brne	.+8      	; 0x1ca <_Z9pinChangeii+0x138>
     1c2:	85 b3       	in	r24, 0x15	; 21
     1c4:	8f 7d       	andi	r24, 0xDF	; 223
     1c6:	85 bb       	out	0x15, r24	; 21
     1c8:	08 95       	ret
     1ca:	8a 31       	cpi	r24, 0x1A	; 26
     1cc:	91 05       	cpc	r25, r1
     1ce:	21 f4       	brne	.+8      	; 0x1d8 <_Z9pinChangeii+0x146>
     1d0:	85 b3       	in	r24, 0x15	; 21
     1d2:	8f 7b       	andi	r24, 0xBF	; 191
     1d4:	85 bb       	out	0x15, r24	; 21
     1d6:	08 95       	ret
     1d8:	8b 31       	cpi	r24, 0x1B	; 27
     1da:	91 05       	cpc	r25, r1
     1dc:	21 f4       	brne	.+8      	; 0x1e6 <_Z9pinChangeii+0x154>
     1de:	85 b3       	in	r24, 0x15	; 21
     1e0:	8f 77       	andi	r24, 0x7F	; 127
     1e2:	85 bb       	out	0x15, r24	; 21
     1e4:	08 95       	ret
     1e6:	8e 31       	cpi	r24, 0x1E	; 30
     1e8:	91 05       	cpc	r25, r1
     1ea:	21 f4       	brne	.+8      	; 0x1f4 <_Z9pinChangeii+0x162>
     1ec:	82 b3       	in	r24, 0x12	; 18
     1ee:	8e 7f       	andi	r24, 0xFE	; 254
     1f0:	82 bb       	out	0x12, r24	; 18
     1f2:	08 95       	ret
     1f4:	8f 31       	cpi	r24, 0x1F	; 31
     1f6:	91 05       	cpc	r25, r1
     1f8:	21 f4       	brne	.+8      	; 0x202 <_Z9pinChangeii+0x170>
     1fa:	82 b3       	in	r24, 0x12	; 18
     1fc:	8d 7f       	andi	r24, 0xFD	; 253
     1fe:	82 bb       	out	0x12, r24	; 18
     200:	08 95       	ret
     202:	80 32       	cpi	r24, 0x20	; 32
     204:	91 05       	cpc	r25, r1
     206:	21 f4       	brne	.+8      	; 0x210 <_Z9pinChangeii+0x17e>
     208:	82 b3       	in	r24, 0x12	; 18
     20a:	8b 7f       	andi	r24, 0xFB	; 251
     20c:	82 bb       	out	0x12, r24	; 18
     20e:	08 95       	ret
     210:	81 32       	cpi	r24, 0x21	; 33
     212:	91 05       	cpc	r25, r1
     214:	21 f4       	brne	.+8      	; 0x21e <_Z9pinChangeii+0x18c>
     216:	82 b3       	in	r24, 0x12	; 18
     218:	87 7f       	andi	r24, 0xF7	; 247
     21a:	82 bb       	out	0x12, r24	; 18
     21c:	08 95       	ret
     21e:	82 32       	cpi	r24, 0x22	; 34
     220:	91 05       	cpc	r25, r1
     222:	21 f4       	brne	.+8      	; 0x22c <_Z9pinChangeii+0x19a>
     224:	82 b3       	in	r24, 0x12	; 18
     226:	8f 7e       	andi	r24, 0xEF	; 239
     228:	82 bb       	out	0x12, r24	; 18
     22a:	08 95       	ret
     22c:	83 32       	cpi	r24, 0x23	; 35
     22e:	91 05       	cpc	r25, r1
     230:	21 f4       	brne	.+8      	; 0x23a <_Z9pinChangeii+0x1a8>
     232:	82 b3       	in	r24, 0x12	; 18
     234:	8f 7d       	andi	r24, 0xDF	; 223
     236:	82 bb       	out	0x12, r24	; 18
     238:	08 95       	ret
     23a:	84 32       	cpi	r24, 0x24	; 36
     23c:	91 05       	cpc	r25, r1
     23e:	21 f4       	brne	.+8      	; 0x248 <_Z9pinChangeii+0x1b6>
     240:	82 b3       	in	r24, 0x12	; 18
     242:	8f 7b       	andi	r24, 0xBF	; 191
     244:	82 bb       	out	0x12, r24	; 18
     246:	08 95       	ret
     248:	85 97       	sbiw	r24, 0x25	; 37
     24a:	09 f0       	breq	.+2      	; 0x24e <_Z9pinChangeii+0x1bc>
     24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     24e:	82 b3       	in	r24, 0x12	; 18
     250:	8f 77       	andi	r24, 0x7F	; 127
     252:	82 bb       	out	0x12, r24	; 18
     254:	08 95       	ret
     256:	00 97       	sbiw	r24, 0x00	; 0
     258:	21 f4       	brne	.+8      	; 0x262 <_Z9pinChangeii+0x1d0>
     25a:	8b b3       	in	r24, 0x1b	; 27
     25c:	81 60       	ori	r24, 0x01	; 1
     25e:	8b bb       	out	0x1b, r24	; 27
     260:	08 95       	ret
     262:	81 30       	cpi	r24, 0x01	; 1
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <_Z9pinChangeii+0x1de>
     268:	8b b3       	in	r24, 0x1b	; 27
     26a:	82 60       	ori	r24, 0x02	; 2
     26c:	8b bb       	out	0x1b, r24	; 27
     26e:	08 95       	ret
     270:	82 30       	cpi	r24, 0x02	; 2
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <_Z9pinChangeii+0x1ec>
     276:	8b b3       	in	r24, 0x1b	; 27
     278:	84 60       	ori	r24, 0x04	; 4
     27a:	8b bb       	out	0x1b, r24	; 27
     27c:	08 95       	ret
     27e:	83 30       	cpi	r24, 0x03	; 3
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <_Z9pinChangeii+0x1fa>
     284:	8b b3       	in	r24, 0x1b	; 27
     286:	88 60       	ori	r24, 0x08	; 8
     288:	8b bb       	out	0x1b, r24	; 27
     28a:	08 95       	ret
     28c:	84 30       	cpi	r24, 0x04	; 4
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <_Z9pinChangeii+0x208>
     292:	8b b3       	in	r24, 0x1b	; 27
     294:	80 61       	ori	r24, 0x10	; 16
     296:	8b bb       	out	0x1b, r24	; 27
     298:	08 95       	ret
     29a:	85 30       	cpi	r24, 0x05	; 5
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <_Z9pinChangeii+0x216>
     2a0:	8b b3       	in	r24, 0x1b	; 27
     2a2:	80 62       	ori	r24, 0x20	; 32
     2a4:	8b bb       	out	0x1b, r24	; 27
     2a6:	08 95       	ret
     2a8:	86 30       	cpi	r24, 0x06	; 6
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <_Z9pinChangeii+0x224>
     2ae:	8b b3       	in	r24, 0x1b	; 27
     2b0:	80 64       	ori	r24, 0x40	; 64
     2b2:	8b bb       	out	0x1b, r24	; 27
     2b4:	08 95       	ret
     2b6:	87 30       	cpi	r24, 0x07	; 7
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <_Z9pinChangeii+0x232>
     2bc:	8b b3       	in	r24, 0x1b	; 27
     2be:	80 68       	ori	r24, 0x80	; 128
     2c0:	8b bb       	out	0x1b, r24	; 27
     2c2:	08 95       	ret
     2c4:	8a 30       	cpi	r24, 0x0A	; 10
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <_Z9pinChangeii+0x240>
     2ca:	88 b3       	in	r24, 0x18	; 24
     2cc:	81 60       	ori	r24, 0x01	; 1
     2ce:	88 bb       	out	0x18, r24	; 24
     2d0:	08 95       	ret
     2d2:	8b 30       	cpi	r24, 0x0B	; 11
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <_Z9pinChangeii+0x24e>
     2d8:	88 b3       	in	r24, 0x18	; 24
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	88 bb       	out	0x18, r24	; 24
     2de:	08 95       	ret
     2e0:	8c 30       	cpi	r24, 0x0C	; 12
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <_Z9pinChangeii+0x25c>
     2e6:	88 b3       	in	r24, 0x18	; 24
     2e8:	84 60       	ori	r24, 0x04	; 4
     2ea:	88 bb       	out	0x18, r24	; 24
     2ec:	08 95       	ret
     2ee:	8d 30       	cpi	r24, 0x0D	; 13
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <_Z9pinChangeii+0x26a>
     2f4:	88 b3       	in	r24, 0x18	; 24
     2f6:	88 60       	ori	r24, 0x08	; 8
     2f8:	88 bb       	out	0x18, r24	; 24
     2fa:	08 95       	ret
     2fc:	8e 30       	cpi	r24, 0x0E	; 14
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <_Z9pinChangeii+0x278>
     302:	88 b3       	in	r24, 0x18	; 24
     304:	80 61       	ori	r24, 0x10	; 16
     306:	88 bb       	out	0x18, r24	; 24
     308:	08 95       	ret
     30a:	8f 30       	cpi	r24, 0x0F	; 15
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <_Z9pinChangeii+0x286>
     310:	88 b3       	in	r24, 0x18	; 24
     312:	80 62       	ori	r24, 0x20	; 32
     314:	88 bb       	out	0x18, r24	; 24
     316:	08 95       	ret
     318:	80 31       	cpi	r24, 0x10	; 16
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <_Z9pinChangeii+0x294>
     31e:	88 b3       	in	r24, 0x18	; 24
     320:	80 64       	ori	r24, 0x40	; 64
     322:	88 bb       	out	0x18, r24	; 24
     324:	08 95       	ret
     326:	81 31       	cpi	r24, 0x11	; 17
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <_Z9pinChangeii+0x2a2>
     32c:	88 b3       	in	r24, 0x18	; 24
     32e:	80 68       	ori	r24, 0x80	; 128
     330:	88 bb       	out	0x18, r24	; 24
     332:	08 95       	ret
     334:	84 31       	cpi	r24, 0x14	; 20
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <_Z9pinChangeii+0x2b0>
     33a:	85 b3       	in	r24, 0x15	; 21
     33c:	81 60       	ori	r24, 0x01	; 1
     33e:	85 bb       	out	0x15, r24	; 21
     340:	08 95       	ret
     342:	85 31       	cpi	r24, 0x15	; 21
     344:	91 05       	cpc	r25, r1
     346:	21 f4       	brne	.+8      	; 0x350 <_Z9pinChangeii+0x2be>
     348:	85 b3       	in	r24, 0x15	; 21
     34a:	82 60       	ori	r24, 0x02	; 2
     34c:	85 bb       	out	0x15, r24	; 21
     34e:	08 95       	ret
     350:	86 31       	cpi	r24, 0x16	; 22
     352:	91 05       	cpc	r25, r1
     354:	21 f4       	brne	.+8      	; 0x35e <_Z9pinChangeii+0x2cc>
     356:	85 b3       	in	r24, 0x15	; 21
     358:	84 60       	ori	r24, 0x04	; 4
     35a:	85 bb       	out	0x15, r24	; 21
     35c:	08 95       	ret
     35e:	87 31       	cpi	r24, 0x17	; 23
     360:	91 05       	cpc	r25, r1
     362:	21 f4       	brne	.+8      	; 0x36c <_Z9pinChangeii+0x2da>
     364:	85 b3       	in	r24, 0x15	; 21
     366:	88 60       	ori	r24, 0x08	; 8
     368:	85 bb       	out	0x15, r24	; 21
     36a:	08 95       	ret
     36c:	88 31       	cpi	r24, 0x18	; 24
     36e:	91 05       	cpc	r25, r1
     370:	21 f4       	brne	.+8      	; 0x37a <_Z9pinChangeii+0x2e8>
     372:	85 b3       	in	r24, 0x15	; 21
     374:	80 61       	ori	r24, 0x10	; 16
     376:	85 bb       	out	0x15, r24	; 21
     378:	08 95       	ret
     37a:	89 31       	cpi	r24, 0x19	; 25
     37c:	91 05       	cpc	r25, r1
     37e:	21 f4       	brne	.+8      	; 0x388 <_Z9pinChangeii+0x2f6>
     380:	85 b3       	in	r24, 0x15	; 21
     382:	80 62       	ori	r24, 0x20	; 32
     384:	85 bb       	out	0x15, r24	; 21
     386:	08 95       	ret
     388:	8a 31       	cpi	r24, 0x1A	; 26
     38a:	91 05       	cpc	r25, r1
     38c:	21 f4       	brne	.+8      	; 0x396 <_Z9pinChangeii+0x304>
     38e:	85 b3       	in	r24, 0x15	; 21
     390:	80 64       	ori	r24, 0x40	; 64
     392:	85 bb       	out	0x15, r24	; 21
     394:	08 95       	ret
     396:	8b 31       	cpi	r24, 0x1B	; 27
     398:	91 05       	cpc	r25, r1
     39a:	21 f4       	brne	.+8      	; 0x3a4 <_Z9pinChangeii+0x312>
     39c:	85 b3       	in	r24, 0x15	; 21
     39e:	80 68       	ori	r24, 0x80	; 128
     3a0:	85 bb       	out	0x15, r24	; 21
     3a2:	08 95       	ret
     3a4:	8e 31       	cpi	r24, 0x1E	; 30
     3a6:	91 05       	cpc	r25, r1
     3a8:	21 f4       	brne	.+8      	; 0x3b2 <_Z9pinChangeii+0x320>
     3aa:	82 b3       	in	r24, 0x12	; 18
     3ac:	81 60       	ori	r24, 0x01	; 1
     3ae:	82 bb       	out	0x12, r24	; 18
     3b0:	08 95       	ret
     3b2:	8f 31       	cpi	r24, 0x1F	; 31
     3b4:	91 05       	cpc	r25, r1
     3b6:	21 f4       	brne	.+8      	; 0x3c0 <_Z9pinChangeii+0x32e>
     3b8:	82 b3       	in	r24, 0x12	; 18
     3ba:	82 60       	ori	r24, 0x02	; 2
     3bc:	82 bb       	out	0x12, r24	; 18
     3be:	08 95       	ret
     3c0:	80 32       	cpi	r24, 0x20	; 32
     3c2:	91 05       	cpc	r25, r1
     3c4:	21 f4       	brne	.+8      	; 0x3ce <_Z9pinChangeii+0x33c>
     3c6:	82 b3       	in	r24, 0x12	; 18
     3c8:	84 60       	ori	r24, 0x04	; 4
     3ca:	82 bb       	out	0x12, r24	; 18
     3cc:	08 95       	ret
     3ce:	81 32       	cpi	r24, 0x21	; 33
     3d0:	91 05       	cpc	r25, r1
     3d2:	21 f4       	brne	.+8      	; 0x3dc <_Z9pinChangeii+0x34a>
     3d4:	82 b3       	in	r24, 0x12	; 18
     3d6:	88 60       	ori	r24, 0x08	; 8
     3d8:	82 bb       	out	0x12, r24	; 18
     3da:	08 95       	ret
     3dc:	82 32       	cpi	r24, 0x22	; 34
     3de:	91 05       	cpc	r25, r1
     3e0:	21 f4       	brne	.+8      	; 0x3ea <_Z9pinChangeii+0x358>
     3e2:	82 b3       	in	r24, 0x12	; 18
     3e4:	80 61       	ori	r24, 0x10	; 16
     3e6:	82 bb       	out	0x12, r24	; 18
     3e8:	08 95       	ret
     3ea:	83 32       	cpi	r24, 0x23	; 35
     3ec:	91 05       	cpc	r25, r1
     3ee:	21 f4       	brne	.+8      	; 0x3f8 <_Z9pinChangeii+0x366>
     3f0:	82 b3       	in	r24, 0x12	; 18
     3f2:	80 62       	ori	r24, 0x20	; 32
     3f4:	82 bb       	out	0x12, r24	; 18
     3f6:	08 95       	ret
     3f8:	84 32       	cpi	r24, 0x24	; 36
     3fa:	91 05       	cpc	r25, r1
     3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     3fe:	82 b3       	in	r24, 0x12	; 18
     400:	80 64       	ori	r24, 0x40	; 64
     402:	82 bb       	out	0x12, r24	; 18
     404:	08 95       	ret
     406:	85 97       	sbiw	r24, 0x25	; 37
     408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     40a:	82 b3       	in	r24, 0x12	; 18
     40c:	80 68       	ori	r24, 0x80	; 128
     40e:	82 bb       	out	0x12, r24	; 18
     410:	08 95       	ret

00000412 <_Z9Lcd4_Portc>:
     412:	cf 93       	push	r28
     414:	c8 2f       	mov	r28, r24
     416:	80 ff       	sbrs	r24, 0
     418:	07 c0       	rjmp	.+14     	; 0x428 <_Z9Lcd4_Portc+0x16>
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	84 e1       	ldi	r24, 0x14	; 20
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     426:	06 c0       	rjmp	.+12     	; 0x434 <_Z9Lcd4_Portc+0x22>
     428:	60 e0       	ldi	r22, 0x00	; 0
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	84 e1       	ldi	r24, 0x14	; 20
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     434:	c1 ff       	sbrs	r28, 1
     436:	07 c0       	rjmp	.+14     	; 0x446 <_Z9Lcd4_Portc+0x34>
     438:	61 e0       	ldi	r22, 0x01	; 1
     43a:	70 e0       	ldi	r23, 0x00	; 0
     43c:	85 e1       	ldi	r24, 0x15	; 21
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     444:	06 c0       	rjmp	.+12     	; 0x452 <_Z9Lcd4_Portc+0x40>
     446:	60 e0       	ldi	r22, 0x00	; 0
     448:	70 e0       	ldi	r23, 0x00	; 0
     44a:	85 e1       	ldi	r24, 0x15	; 21
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     452:	c2 ff       	sbrs	r28, 2
     454:	07 c0       	rjmp	.+14     	; 0x464 <_Z9Lcd4_Portc+0x52>
     456:	61 e0       	ldi	r22, 0x01	; 1
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	86 e1       	ldi	r24, 0x16	; 22
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     462:	06 c0       	rjmp	.+12     	; 0x470 <_Z9Lcd4_Portc+0x5e>
     464:	60 e0       	ldi	r22, 0x00	; 0
     466:	70 e0       	ldi	r23, 0x00	; 0
     468:	86 e1       	ldi	r24, 0x16	; 22
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     470:	c3 ff       	sbrs	r28, 3
     472:	07 c0       	rjmp	.+14     	; 0x482 <_Z9Lcd4_Portc+0x70>
     474:	61 e0       	ldi	r22, 0x01	; 1
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	87 e1       	ldi	r24, 0x17	; 23
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     480:	06 c0       	rjmp	.+12     	; 0x48e <_Z9Lcd4_Portc+0x7c>
     482:	60 e0       	ldi	r22, 0x00	; 0
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	87 e1       	ldi	r24, 0x17	; 23
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <_Z8Lcd4_Cmdc>:
     492:	cf 93       	push	r28
     494:	c8 2f       	mov	r28, r24
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	8a e1       	ldi	r24, 0x1A	; 26
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4a2:	8c 2f       	mov	r24, r28
     4a4:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     4a8:	61 e0       	ldi	r22, 0x01	; 1
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	8b e1       	ldi	r24, 0x1B	; 27
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4b4:	8f ec       	ldi	r24, 0xCF	; 207
     4b6:	97 e0       	ldi	r25, 0x07	; 7
     4b8:	01 97       	sbiw	r24, 0x01	; 1
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <_Z8Lcd4_Cmdc+0x26>
     4bc:	00 c0       	rjmp	.+0      	; 0x4be <_Z8Lcd4_Cmdc+0x2c>
     4be:	00 00       	nop
     4c0:	60 e0       	ldi	r22, 0x00	; 0
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	8b e1       	ldi	r24, 0x1B	; 27
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4cc:	8f ec       	ldi	r24, 0xCF	; 207
     4ce:	97 e0       	ldi	r25, 0x07	; 7
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <_Z8Lcd4_Cmdc+0x3e>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <_Z8Lcd4_Cmdc+0x44>
     4d6:	00 00       	nop
     4d8:	cf 91       	pop	r28
     4da:	08 95       	ret

000004dc <_Z10Lcd4_Clearv>:
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     4e8:	08 95       	ret

000004ea <_Z15Lcd4_Set_Cursorcc>:
     4ea:	cf 93       	push	r28
     4ec:	81 30       	cpi	r24, 0x01	; 1
     4ee:	99 f4       	brne	.+38     	; 0x516 <_Z15Lcd4_Set_Cursorcc+0x2c>
     4f0:	80 e8       	ldi	r24, 0x80	; 128
     4f2:	86 0f       	add	r24, r22
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	95 95       	asr	r25
     4f8:	87 95       	ror	r24
     4fa:	95 95       	asr	r25
     4fc:	87 95       	ror	r24
     4fe:	95 95       	asr	r25
     500:	87 95       	ror	r24
     502:	95 95       	asr	r25
     504:	87 95       	ror	r24
     506:	c6 2f       	mov	r28, r22
     508:	cf 70       	andi	r28, 0x0F	; 15
     50a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     50e:	8c 2f       	mov	r24, r28
     510:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     514:	14 c0       	rjmp	.+40     	; 0x53e <_Z15Lcd4_Set_Cursorcc+0x54>
     516:	82 30       	cpi	r24, 0x02	; 2
     518:	91 f4       	brne	.+36     	; 0x53e <_Z15Lcd4_Set_Cursorcc+0x54>
     51a:	80 ec       	ldi	r24, 0xC0	; 192
     51c:	86 0f       	add	r24, r22
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	95 95       	asr	r25
     522:	87 95       	ror	r24
     524:	95 95       	asr	r25
     526:	87 95       	ror	r24
     528:	95 95       	asr	r25
     52a:	87 95       	ror	r24
     52c:	95 95       	asr	r25
     52e:	87 95       	ror	r24
     530:	c6 2f       	mov	r28, r22
     532:	cf 70       	andi	r28, 0x0F	; 15
     534:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     538:	8c 2f       	mov	r24, r28
     53a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     53e:	cf 91       	pop	r28
     540:	08 95       	ret

00000542 <_Z9Lcd4_Initv>:
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     548:	8f e3       	ldi	r24, 0x3F	; 63
     54a:	9c e9       	ldi	r25, 0x9C	; 156
     54c:	01 97       	sbiw	r24, 0x01	; 1
     54e:	f1 f7       	brne	.-4      	; 0x54c <_Z9Lcd4_Initv+0xa>
     550:	00 c0       	rjmp	.+0      	; 0x552 <_Z9Lcd4_Initv+0x10>
     552:	00 00       	nop
     554:	83 e0       	ldi	r24, 0x03	; 3
     556:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     55a:	8f e0       	ldi	r24, 0x0F	; 15
     55c:	97 e2       	ldi	r25, 0x27	; 39
     55e:	01 97       	sbiw	r24, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <_Z9Lcd4_Initv+0x1c>
     562:	00 c0       	rjmp	.+0      	; 0x564 <_Z9Lcd4_Initv+0x22>
     564:	00 00       	nop
     566:	83 e0       	ldi	r24, 0x03	; 3
     568:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     56c:	8f ee       	ldi	r24, 0xEF	; 239
     56e:	95 e5       	ldi	r25, 0x55	; 85
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <_Z9Lcd4_Initv+0x2e>
     574:	00 c0       	rjmp	.+0      	; 0x576 <_Z9Lcd4_Initv+0x34>
     576:	00 00       	nop
     578:	83 e0       	ldi	r24, 0x03	; 3
     57a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     57e:	82 e0       	ldi	r24, 0x02	; 2
     580:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     584:	82 e0       	ldi	r24, 0x02	; 2
     586:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     58a:	88 e0       	ldi	r24, 0x08	; 8
     58c:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     596:	8c e0       	ldi	r24, 0x0C	; 12
     598:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     5a2:	86 e0       	ldi	r24, 0x06	; 6
     5a4:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     5a8:	08 95       	ret

000005aa <_Z15Lcd4_Write_Charc>:
     5aa:	cf 93       	push	r28
     5ac:	df 93       	push	r29
     5ae:	d8 2f       	mov	r29, r24
     5b0:	df 70       	andi	r29, 0x0F	; 15
     5b2:	c8 2f       	mov	r28, r24
     5b4:	c0 7f       	andi	r28, 0xF0	; 240
     5b6:	61 e0       	ldi	r22, 0x01	; 1
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	8a e1       	ldi	r24, 0x1A	; 26
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5c2:	8c 2f       	mov	r24, r28
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	95 95       	asr	r25
     5c8:	87 95       	ror	r24
     5ca:	95 95       	asr	r25
     5cc:	87 95       	ror	r24
     5ce:	95 95       	asr	r25
     5d0:	87 95       	ror	r24
     5d2:	95 95       	asr	r25
     5d4:	87 95       	ror	r24
     5d6:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     5da:	61 e0       	ldi	r22, 0x01	; 1
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	8b e1       	ldi	r24, 0x1B	; 27
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5e6:	8f ec       	ldi	r24, 0xCF	; 207
     5e8:	97 e0       	ldi	r25, 0x07	; 7
     5ea:	01 97       	sbiw	r24, 0x01	; 1
     5ec:	f1 f7       	brne	.-4      	; 0x5ea <_Z15Lcd4_Write_Charc+0x40>
     5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <_Z15Lcd4_Write_Charc+0x46>
     5f0:	00 00       	nop
     5f2:	60 e0       	ldi	r22, 0x00	; 0
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	8b e1       	ldi	r24, 0x1B	; 27
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5fe:	8f ec       	ldi	r24, 0xCF	; 207
     600:	97 e0       	ldi	r25, 0x07	; 7
     602:	01 97       	sbiw	r24, 0x01	; 1
     604:	f1 f7       	brne	.-4      	; 0x602 <_Z15Lcd4_Write_Charc+0x58>
     606:	00 c0       	rjmp	.+0      	; 0x608 <_Z15Lcd4_Write_Charc+0x5e>
     608:	00 00       	nop
     60a:	8d 2f       	mov	r24, r29
     60c:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	8b e1       	ldi	r24, 0x1B	; 27
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     61c:	8f ec       	ldi	r24, 0xCF	; 207
     61e:	97 e0       	ldi	r25, 0x07	; 7
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <_Z15Lcd4_Write_Charc+0x76>
     624:	00 c0       	rjmp	.+0      	; 0x626 <_Z15Lcd4_Write_Charc+0x7c>
     626:	00 00       	nop
     628:	60 e0       	ldi	r22, 0x00	; 0
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	8b e1       	ldi	r24, 0x1B	; 27
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     634:	8f ec       	ldi	r24, 0xCF	; 207
     636:	97 e0       	ldi	r25, 0x07	; 7
     638:	01 97       	sbiw	r24, 0x01	; 1
     63a:	f1 f7       	brne	.-4      	; 0x638 <_Z15Lcd4_Write_Charc+0x8e>
     63c:	00 c0       	rjmp	.+0      	; 0x63e <_Z15Lcd4_Write_Charc+0x94>
     63e:	00 00       	nop
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	08 95       	ret

00000646 <_Z17Lcd4_Write_StringPc>:
     646:	0f 93       	push	r16
     648:	1f 93       	push	r17
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	8c 01       	movw	r16, r24
     650:	c0 e0       	ldi	r28, 0x00	; 0
     652:	d0 e0       	ldi	r29, 0x00	; 0
     654:	f8 01       	movw	r30, r16
     656:	ec 0f       	add	r30, r28
     658:	fd 1f       	adc	r31, r29
     65a:	80 81       	ld	r24, Z
     65c:	88 23       	and	r24, r24
     65e:	21 f0       	breq	.+8      	; 0x668 <_Z17Lcd4_Write_StringPc+0x22>
     660:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
     664:	21 96       	adiw	r28, 0x01	; 1
     666:	f6 cf       	rjmp	.-20     	; 0x654 <_Z17Lcd4_Write_StringPc+0xe>
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	1f 91       	pop	r17
     66e:	0f 91       	pop	r16
     670:	08 95       	ret

00000672 <__vector_9>:
#define output_pin PA7

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
     672:	1f 92       	push	r1
     674:	0f 92       	push	r0
     676:	0f b6       	in	r0, 0x3f	; 63
     678:	0f 92       	push	r0
     67a:	11 24       	eor	r1, r1
     67c:	8f 93       	push	r24
     67e:	9f 93       	push	r25
TimerOverflow++;	/* Increment Timer Overflow count */
     680:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end>
     684:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__data_end+0x1>
     688:	01 96       	adiw	r24, 0x01	; 1
     68a:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <__data_end+0x1>
     68e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__data_end>
}
     692:	9f 91       	pop	r25
     694:	8f 91       	pop	r24
     696:	0f 90       	pop	r0
     698:	0f be       	out	0x3f, r0	; 63
     69a:	0f 90       	pop	r0
     69c:	1f 90       	pop	r1
     69e:	18 95       	reti

000006a0 <_Z9get_digitd>:

long long int get_digit(double n)
{
     6a0:	2f 92       	push	r2
     6a2:	3f 92       	push	r3
     6a4:	4f 92       	push	r4
     6a6:	5f 92       	push	r5
     6a8:	6f 92       	push	r6
     6aa:	7f 92       	push	r7
     6ac:	8f 92       	push	r8
     6ae:	9f 92       	push	r9
     6b0:	af 92       	push	r10
     6b2:	bf 92       	push	r11
     6b4:	cf 92       	push	r12
     6b6:	df 92       	push	r13
     6b8:	ef 92       	push	r14
     6ba:	ff 92       	push	r15
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	00 d0       	rcall	.+0      	; 0x6c6 <_Z9get_digitd+0x26>
     6c6:	00 d0       	rcall	.+0      	; 0x6c8 <_Z9get_digitd+0x28>
     6c8:	1f 92       	push	r1
     6ca:	cd b7       	in	r28, 0x3d	; 61
     6cc:	de b7       	in	r29, 0x3e	; 62
	long long int a = floor(n);
     6ce:	0e 94 a1 06 	call	0xd42	; 0xd42 <floor>
     6d2:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__fixsfdi>
     6d6:	42 2e       	mov	r4, r18
     6d8:	3d 83       	std	Y+5, r19	; 0x05
     6da:	4c 83       	std	Y+4, r20	; 0x04
     6dc:	b5 2f       	mov	r27, r21
     6de:	f6 2f       	mov	r31, r22
     6e0:	e7 2f       	mov	r30, r23
     6e2:	28 2e       	mov	r2, r24
     6e4:	39 2e       	mov	r3, r25
	long long digit = 0;
     6e6:	71 2c       	mov	r7, r1
     6e8:	81 2c       	mov	r8, r1
     6ea:	91 2c       	mov	r9, r1
     6ec:	19 82       	std	Y+1, r1	; 0x01
     6ee:	1a 82       	std	Y+2, r1	; 0x02
     6f0:	1b 82       	std	Y+3, r1	; 0x03
     6f2:	51 2c       	mov	r5, r1
     6f4:	61 2c       	mov	r6, r1
	while(a > 0)
     6f6:	24 2d       	mov	r18, r4
     6f8:	3d 81       	ldd	r19, Y+5	; 0x05
     6fa:	4c 81       	ldd	r20, Y+4	; 0x04
     6fc:	5b 2f       	mov	r21, r27
     6fe:	6f 2f       	mov	r22, r31
     700:	7e 2f       	mov	r23, r30
     702:	82 2d       	mov	r24, r2
     704:	93 2d       	mov	r25, r3
     706:	a0 e0       	ldi	r26, 0x00	; 0
     708:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__cmpdi2_s8>
     70c:	51 f1       	breq	.+84     	; 0x762 <_Z9get_digitd+0xc2>
     70e:	4c f1       	brlt	.+82     	; 0x762 <_Z9get_digitd+0xc2>
	{
		a = a/10;
     710:	0f 2e       	mov	r0, r31
     712:	fa e0       	ldi	r31, 0x0A	; 10
     714:	af 2e       	mov	r10, r31
     716:	f0 2d       	mov	r31, r0
     718:	b1 2c       	mov	r11, r1
     71a:	c1 2c       	mov	r12, r1
     71c:	d1 2c       	mov	r13, r1
     71e:	e1 2c       	mov	r14, r1
     720:	f1 2c       	mov	r15, r1
     722:	00 e0       	ldi	r16, 0x00	; 0
     724:	10 e0       	ldi	r17, 0x00	; 0
     726:	0e 94 06 08 	call	0x100c	; 0x100c <__divdi3>
     72a:	42 2e       	mov	r4, r18
     72c:	3d 83       	std	Y+5, r19	; 0x05
     72e:	4c 83       	std	Y+4, r20	; 0x04
     730:	b5 2f       	mov	r27, r21
     732:	f6 2f       	mov	r31, r22
     734:	e7 2f       	mov	r30, r23
     736:	28 2e       	mov	r2, r24
     738:	39 2e       	mov	r3, r25
		digit++;
     73a:	27 2d       	mov	r18, r7
     73c:	38 2d       	mov	r19, r8
     73e:	49 2d       	mov	r20, r9
     740:	59 81       	ldd	r21, Y+1	; 0x01
     742:	6a 81       	ldd	r22, Y+2	; 0x02
     744:	7b 81       	ldd	r23, Y+3	; 0x03
     746:	85 2d       	mov	r24, r5
     748:	96 2d       	mov	r25, r6
     74a:	a1 e0       	ldi	r26, 0x01	; 1
     74c:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__adddi3_s8>
     750:	72 2e       	mov	r7, r18
     752:	83 2e       	mov	r8, r19
     754:	94 2e       	mov	r9, r20
     756:	59 83       	std	Y+1, r21	; 0x01
     758:	6a 83       	std	Y+2, r22	; 0x02
     75a:	7b 83       	std	Y+3, r23	; 0x03
     75c:	58 2e       	mov	r5, r24
     75e:	69 2e       	mov	r6, r25

long long int get_digit(double n)
{
	long long int a = floor(n);
	long long digit = 0;
	while(a > 0)
     760:	ca cf       	rjmp	.-108    	; 0x6f6 <_Z9get_digitd+0x56>
		a = a/10;
		digit++;
	}
	
	return digit;
}
     762:	27 2d       	mov	r18, r7
     764:	38 2d       	mov	r19, r8
     766:	49 2d       	mov	r20, r9
     768:	59 81       	ldd	r21, Y+1	; 0x01
     76a:	6a 81       	ldd	r22, Y+2	; 0x02
     76c:	7b 81       	ldd	r23, Y+3	; 0x03
     76e:	85 2d       	mov	r24, r5
     770:	96 2d       	mov	r25, r6
     772:	0f 90       	pop	r0
     774:	0f 90       	pop	r0
     776:	0f 90       	pop	r0
     778:	0f 90       	pop	r0
     77a:	0f 90       	pop	r0
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
     786:	ef 90       	pop	r14
     788:	df 90       	pop	r13
     78a:	cf 90       	pop	r12
     78c:	bf 90       	pop	r11
     78e:	af 90       	pop	r10
     790:	9f 90       	pop	r9
     792:	8f 90       	pop	r8
     794:	7f 90       	pop	r7
     796:	6f 90       	pop	r6
     798:	5f 90       	pop	r5
     79a:	4f 90       	pop	r4
     79c:	3f 90       	pop	r3
     79e:	2f 90       	pop	r2
     7a0:	08 95       	ret

000007a2 <main>:

int main(void)
{
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	cd b7       	in	r28, 0x3d	; 61
     7a8:	de b7       	in	r29, 0x3e	; 62
     7aa:	28 97       	sbiw	r28, 0x08	; 8
     7ac:	0f b6       	in	r0, 0x3f	; 63
     7ae:	f8 94       	cli
     7b0:	de bf       	out	0x3e, r29	; 62
     7b2:	0f be       	out	0x3f, r0	; 63
     7b4:	cd bf       	out	0x3d, r28	; 61
long count;
double distance;

DDRA = 0b10000001; /* Make trigger pin as output and PA7 as output to light up the LED*/
     7b6:	81 e8       	ldi	r24, 0x81	; 129
     7b8:	8a bb       	out	0x1a, r24	; 26
PORTD = 0xFF;		/* Turn on Pull-up */
     7ba:	8f ef       	ldi	r24, 0xFF	; 255
     7bc:	82 bb       	out	0x12, r24	; 18
DDRC = 0xFF;
     7be:	84 bb       	out	0x14, r24	; 20
Lcd4_Init();
     7c0:	0e 94 a1 02 	call	0x542	; 0x542 <_Z9Lcd4_Initv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7c4:	8f e1       	ldi	r24, 0x1F	; 31
     7c6:	9e e4       	ldi	r25, 0x4E	; 78
     7c8:	01 97       	sbiw	r24, 0x01	; 1
     7ca:	f1 f7       	brne	.-4      	; 0x7c8 <main+0x26>
     7cc:	00 c0       	rjmp	.+0      	; 0x7ce <main+0x2c>
     7ce:	00 00       	nop

_delay_ms(10);

sei();			/* Enable global interrupt */
     7d0:	78 94       	sei
TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
     7d2:	84 e0       	ldi	r24, 0x04	; 4
     7d4:	89 bf       	out	0x39, r24	; 57
TCCR1A = 0;		/* Set all bit to zero Normal operation */
     7d6:	1f bc       	out	0x2f, r1	; 47
     7d8:	8f e1       	ldi	r24, 0x1F	; 31
     7da:	9e e4       	ldi	r25, 0x4E	; 78
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	f1 f7       	brne	.-4      	; 0x7dc <main+0x3a>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <main+0x40>
     7e2:	00 00       	nop
val = floor(points);
Lcd4_Write_Char(val+'0');
//_delay_ms(10);

//_delay_ms(2000);
}
     7e4:	2d b6       	in	r2, 0x3d	; 61
     7e6:	3e b6       	in	r3, 0x3e	; 62
_delay_ms(10);

while(1)
{
/* Give 10us trigger pulse on trig. pin to HC-SR04 */
PORTA |= (1 << Trigger_pin);
     7e8:	8b b3       	in	r24, 0x1b	; 27
     7ea:	81 60       	ori	r24, 0x01	; 1
     7ec:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7ee:	9a e1       	ldi	r25, 0x1A	; 26
     7f0:	9a 95       	dec	r25
     7f2:	f1 f7       	brne	.-4      	; 0x7f0 <main+0x4e>
     7f4:	00 c0       	rjmp	.+0      	; 0x7f6 <main+0x54>
_delay_us(10);
PORTA &= (~(1 << Trigger_pin));
     7f6:	8b b3       	in	r24, 0x1b	; 27
     7f8:	8e 7f       	andi	r24, 0xFE	; 254
     7fa:	8b bb       	out	0x1b, r24	; 27

TCNT1 = 0;	/* Clear Timer counter */
     7fc:	1d bc       	out	0x2d, r1	; 45
     7fe:	1c bc       	out	0x2c, r1	; 44
TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
     800:	81 e4       	ldi	r24, 0x41	; 65
     802:	8e bd       	out	0x2e, r24	; 46
TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     804:	80 e2       	ldi	r24, 0x20	; 32
     806:	88 bf       	out	0x38, r24	; 56
TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
     808:	84 e0       	ldi	r24, 0x04	; 4
     80a:	88 bf       	out	0x38, r24	; 56

/*Calculate width of Echo by Input Capture (ICP) */

while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
     80c:	08 b6       	in	r0, 0x38	; 56
     80e:	05 fe       	sbrs	r0, 5
     810:	fd cf       	rjmp	.-6      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
TCNT1 = 0;	/* Clear Timer counter */
     812:	1d bc       	out	0x2d, r1	; 45
     814:	1c bc       	out	0x2c, r1	; 44
TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
     816:	81 e0       	ldi	r24, 0x01	; 1
     818:	8e bd       	out	0x2e, r24	; 46
TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     81a:	80 e2       	ldi	r24, 0x20	; 32
     81c:	88 bf       	out	0x38, r24	; 56
TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
     81e:	84 e0       	ldi	r24, 0x04	; 4
     820:	88 bf       	out	0x38, r24	; 56
TimerOverflow = 0;/* Clear Timer overflow count */
     822:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__data_end+0x1>
     826:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__data_end>

bool ok = true;

while ((TIFR & (1 << ICF1)) == 0)/* Wait for falling edge */
     82a:	08 b6       	in	r0, 0x38	; 56
     82c:	05 fc       	sbrc	r0, 5
     82e:	0c c0       	rjmp	.+24     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
{
	if(TimerOverflow >= 1 || ICR1 >= 60000)
     830:	86 b5       	in	r24, 0x26	; 38
     832:	97 b5       	in	r25, 0x27	; 39
     834:	80 36       	cpi	r24, 0x60	; 96
     836:	9a 4e       	sbci	r25, 0xEA	; 234
     838:	10 f0       	brcs	.+4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	01 c0       	rjmp	.+2      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	88 23       	and	r24, r24
     842:	99 f3       	breq	.-26     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
	{
		ok = false;
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	01 c0       	rjmp	.+2      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
TimerOverflow = 0;/* Clear Timer overflow count */

bool ok = true;
     848:	81 e0       	ldi	r24, 0x01	; 1
		ok = false;
		break;
	}
}

if(!ok)
     84a:	81 11       	cpse	r24, r1
     84c:	13 c0       	rjmp	.+38     	; 0x874 <__stack+0x15>
{
	PORTA &= (~(1<<output_pin));
     84e:	8b b3       	in	r24, 0x1b	; 27
     850:	8f 77       	andi	r24, 0x7F	; 127
     852:	8b bb       	out	0x1b, r24	; 27
	
	Lcd4_Clear();
     854:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_Z10Lcd4_Clearv>
	Lcd4_Set_Cursor(1,1);
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	0e 94 75 02 	call	0x4ea	; 0x4ea <_Z15Lcd4_Set_Cursorcc>
	Lcd4_Write_String("Distance: OFR!!!");
     860:	80 e6       	ldi	r24, 0x60	; 96
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	0e 94 23 03 	call	0x646	; 0x646 <_Z17Lcd4_Write_StringPc>
	//_delay_ms(10);
	continue;
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	3e be       	out	0x3e, r3	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	2d be       	out	0x3d, r2	; 61
     872:	b8 cf       	rjmp	.-144    	; 0x7e4 <main+0x42>
}

count = ICR1 + (65535 * TimerOverflow);	/* Take count */
     874:	66 b5       	in	r22, 0x26	; 38
     876:	77 b5       	in	r23, 0x27	; 39
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e0       	ldi	r25, 0x00	; 0
/* 8MHz Timer freq, sound speed =343 m/s */
distance = (double)count / 466.47;
     87c:	0e 94 66 06 	call	0xccc	; 0xccc <__floatsisf>
     880:	29 e2       	ldi	r18, 0x29	; 41
     882:	3c e3       	ldi	r19, 0x3C	; 60
     884:	49 ee       	ldi	r20, 0xE9	; 233
     886:	53 e4       	ldi	r21, 0x43	; 67
     888:	0e 94 80 05 	call	0xb00	; 0xb00 <__divsf3>
     88c:	4b 01       	movw	r8, r22
     88e:	5c 01       	movw	r10, r24

if(distance <= 40 && distance>= 2)
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	40 e2       	ldi	r20, 0x20	; 32
     896:	52 e4       	ldi	r21, 0x42	; 66
     898:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__cmpsf2>
     89c:	18 16       	cp	r1, r24
     89e:	74 f0       	brlt	.+28     	; 0x8bc <__stack+0x5d>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e0       	ldi	r20, 0x00	; 0
     8a6:	50 e4       	ldi	r21, 0x40	; 64
     8a8:	c5 01       	movw	r24, r10
     8aa:	b4 01       	movw	r22, r8
     8ac:	0e 94 7e 07 	call	0xefc	; 0xefc <__gesf2>
     8b0:	88 23       	and	r24, r24
     8b2:	24 f0       	brlt	.+8      	; 0x8bc <__stack+0x5d>
{
	PORTA |= (1<<output_pin);
     8b4:	8b b3       	in	r24, 0x1b	; 27
     8b6:	80 68       	ori	r24, 0x80	; 128
     8b8:	8b bb       	out	0x1b, r24	; 27
     8ba:	03 c0       	rjmp	.+6      	; 0x8c2 <__stack+0x63>
}

else
{
	PORTA &= (~(1<<output_pin));	
     8bc:	8b b3       	in	r24, 0x1b	; 27
     8be:	8f 77       	andi	r24, 0x7F	; 127
     8c0:	8b bb       	out	0x1b, r24	; 27
}

Lcd4_Clear();
     8c2:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_Z10Lcd4_Clearv>

double points = distance-floor(distance);
     8c6:	c5 01       	movw	r24, r10
     8c8:	b4 01       	movw	r22, r8
     8ca:	0e 94 a1 06 	call	0xd42	; 0xd42 <floor>
     8ce:	6b 01       	movw	r12, r22
     8d0:	7c 01       	movw	r14, r24
     8d2:	9b 01       	movw	r18, r22
     8d4:	ac 01       	movw	r20, r24
     8d6:	c5 01       	movw	r24, r10
     8d8:	b4 01       	movw	r22, r8
     8da:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__subsf3>
     8de:	2b 01       	movw	r4, r22
     8e0:	3c 01       	movw	r6, r24

long long digit = get_digit(distance);
     8e2:	c5 01       	movw	r24, r10
     8e4:	b4 01       	movw	r22, r8
     8e6:	0e 94 50 03 	call	0x6a0	; 0x6a0 <_Z9get_digitd>
     8ea:	29 83       	std	Y+1, r18	; 0x01
     8ec:	3a 83       	std	Y+2, r19	; 0x02
     8ee:	4b 83       	std	Y+3, r20	; 0x03
     8f0:	5c 83       	std	Y+4, r21	; 0x04
     8f2:	6d 83       	std	Y+5, r22	; 0x05
     8f4:	7e 83       	std	Y+6, r23	; 0x06
     8f6:	8f 83       	std	Y+7, r24	; 0x07
     8f8:	98 87       	std	Y+8, r25	; 0x08
int ara[digit];
     8fa:	89 81       	ldd	r24, Y+1	; 0x01
     8fc:	9a 81       	ldd	r25, Y+2	; 0x02
     8fe:	88 0f       	add	r24, r24
     900:	99 1f       	adc	r25, r25
     902:	2d b7       	in	r18, 0x3d	; 61
     904:	3e b7       	in	r19, 0x3e	; 62
     906:	28 1b       	sub	r18, r24
     908:	39 0b       	sbc	r19, r25
     90a:	0f b6       	in	r0, 0x3f	; 63
     90c:	f8 94       	cli
     90e:	3e bf       	out	0x3e, r19	; 62
     910:	0f be       	out	0x3f, r0	; 63
     912:	2d bf       	out	0x3d, r18	; 61
     914:	8d b7       	in	r24, 0x3d	; 61
     916:	9e b7       	in	r25, 0x3e	; 62
     918:	01 96       	adiw	r24, 0x01	; 1
     91a:	4c 01       	movw	r8, r24
int dis = floor(distance);
     91c:	c7 01       	movw	r24, r14
     91e:	b6 01       	movw	r22, r12
     920:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     924:	b6 2f       	mov	r27, r22
     926:	a7 2f       	mov	r26, r23


for(int i=0;i<digit;i++)
     928:	e0 e0       	ldi	r30, 0x00	; 0
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	29 81       	ldd	r18, Y+1	; 0x01
     92e:	3a 81       	ldd	r19, Y+2	; 0x02
     930:	4b 81       	ldd	r20, Y+3	; 0x03
     932:	5c 81       	ldd	r21, Y+4	; 0x04
     934:	6d 81       	ldd	r22, Y+5	; 0x05
     936:	7e 81       	ldd	r23, Y+6	; 0x06
     938:	8f 81       	ldd	r24, Y+7	; 0x07
     93a:	98 85       	ldd	r25, Y+8	; 0x08
     93c:	ae 2e       	mov	r10, r30
     93e:	bf 2e       	mov	r11, r31
     940:	1f 2f       	mov	r17, r31
     942:	11 0f       	add	r17, r17
     944:	11 0b       	sbc	r17, r17
     946:	c1 2e       	mov	r12, r17
     948:	d1 2e       	mov	r13, r17
     94a:	e1 2e       	mov	r14, r17
     94c:	f1 2e       	mov	r15, r17
     94e:	01 2f       	mov	r16, r17
     950:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__cmpdi2>
     954:	91 f0       	breq	.+36     	; 0x97a <__stack+0x11b>
     956:	8c f0       	brlt	.+34     	; 0x97a <__stack+0x11b>
{
	ara[i] = dis%10;
     958:	8b 2f       	mov	r24, r27
     95a:	9a 2f       	mov	r25, r26
     95c:	6a e0       	ldi	r22, 0x0A	; 10
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__divmodhi4>
     964:	df 01       	movw	r26, r30
     966:	aa 0f       	add	r26, r26
     968:	bb 1f       	adc	r27, r27
     96a:	a8 0d       	add	r26, r8
     96c:	b9 1d       	adc	r27, r9
     96e:	8d 93       	st	X+, r24
     970:	9c 93       	st	X, r25
	dis = dis/10;
     972:	b6 2f       	mov	r27, r22
     974:	a7 2f       	mov	r26, r23
long long digit = get_digit(distance);
int ara[digit];
int dis = floor(distance);


for(int i=0;i<digit;i++)
     976:	31 96       	adiw	r30, 0x01	; 1
     978:	d9 cf       	rjmp	.-78     	; 0x92c <__stack+0xcd>
{
	ara[i] = dis%10;
	dis = dis/10;
}

Lcd4_Set_Cursor(1,1);
     97a:	61 e0       	ldi	r22, 0x01	; 1
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	0e 94 75 02 	call	0x4ea	; 0x4ea <_Z15Lcd4_Set_Cursorcc>
Lcd4_Write_String("Distance: ");
     982:	81 e7       	ldi	r24, 0x71	; 113
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	0e 94 23 03 	call	0x646	; 0x646 <_Z17Lcd4_Write_StringPc>
for(int i=digit-1;i>=0;i--)
     98a:	09 81       	ldd	r16, Y+1	; 0x01
     98c:	1a 81       	ldd	r17, Y+2	; 0x02
     98e:	01 50       	subi	r16, 0x01	; 1
     990:	11 09       	sbc	r17, r1
     992:	11 23       	and	r17, r17
     994:	64 f0       	brlt	.+24     	; 0x9ae <__stack+0x14f>
{
	Lcd4_Write_Char(ara[i]+'0');
     996:	f8 01       	movw	r30, r16
     998:	ee 0f       	add	r30, r30
     99a:	ff 1f       	adc	r31, r31
     99c:	e8 0d       	add	r30, r8
     99e:	f9 1d       	adc	r31, r9
     9a0:	80 81       	ld	r24, Z
     9a2:	80 5d       	subi	r24, 0xD0	; 208
     9a4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
	dis = dis/10;
}

Lcd4_Set_Cursor(1,1);
Lcd4_Write_String("Distance: ");
for(int i=digit-1;i>=0;i--)
     9a8:	01 50       	subi	r16, 0x01	; 1
     9aa:	11 09       	sbc	r17, r1
     9ac:	f2 cf       	rjmp	.-28     	; 0x992 <__stack+0x133>
{
	Lcd4_Write_Char(ara[i]+'0');
}

Lcd4_Write_Char('.');
     9ae:	8e e2       	ldi	r24, 0x2E	; 46
     9b0:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
points*=10;
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 e2       	ldi	r20, 0x20	; 32
     9ba:	51 e4       	ldi	r21, 0x41	; 65
     9bc:	c3 01       	movw	r24, r6
     9be:	b2 01       	movw	r22, r4
     9c0:	0e 94 83 07 	call	0xf06	; 0xf06 <__mulsf3>
     9c4:	4b 01       	movw	r8, r22
     9c6:	5c 01       	movw	r10, r24
int val = floor(points);
     9c8:	0e 94 a1 06 	call	0xd42	; 0xd42 <floor>
     9cc:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     9d0:	6b 01       	movw	r12, r22
     9d2:	7c 01       	movw	r14, r24
Lcd4_Write_Char(val+'0');
     9d4:	80 e3       	ldi	r24, 0x30	; 48
     9d6:	8c 0d       	add	r24, r12
     9d8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
points-=val;
     9dc:	b6 01       	movw	r22, r12
     9de:	dd 0c       	add	r13, r13
     9e0:	88 0b       	sbc	r24, r24
     9e2:	99 0b       	sbc	r25, r25
     9e4:	0e 94 66 06 	call	0xccc	; 0xccc <__floatsisf>
     9e8:	9b 01       	movw	r18, r22
     9ea:	ac 01       	movw	r20, r24
     9ec:	c5 01       	movw	r24, r10
     9ee:	b4 01       	movw	r22, r8
     9f0:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__subsf3>
points*=10;
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	40 e2       	ldi	r20, 0x20	; 32
     9fa:	51 e4       	ldi	r21, 0x41	; 65
     9fc:	0e 94 83 07 	call	0xf06	; 0xf06 <__mulsf3>
val = floor(points);
     a00:	0e 94 a1 06 	call	0xd42	; 0xd42 <floor>
     a04:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
Lcd4_Write_Char(val+'0');
     a08:	80 e3       	ldi	r24, 0x30	; 48
     a0a:	86 0f       	add	r24, r22
     a0c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	f8 94       	cli
     a14:	3e be       	out	0x3e, r3	; 62
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	2d be       	out	0x3d, r2	; 61
     a1a:	e4 ce       	rjmp	.-568    	; 0x7e4 <main+0x42>

00000a1c <__subsf3>:
     a1c:	50 58       	subi	r21, 0x80	; 128

00000a1e <__addsf3>:
     a1e:	bb 27       	eor	r27, r27
     a20:	aa 27       	eor	r26, r26
     a22:	0e 94 26 05 	call	0xa4c	; 0xa4c <__addsf3x>
     a26:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_round>
     a2a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__fp_pscA>
     a2e:	38 f0       	brcs	.+14     	; 0xa3e <__addsf3+0x20>
     a30:	0e 94 25 07 	call	0xe4a	; 0xe4a <__fp_pscB>
     a34:	20 f0       	brcs	.+8      	; 0xa3e <__addsf3+0x20>
     a36:	39 f4       	brne	.+14     	; 0xa46 <__addsf3+0x28>
     a38:	9f 3f       	cpi	r25, 0xFF	; 255
     a3a:	19 f4       	brne	.+6      	; 0xa42 <__addsf3+0x24>
     a3c:	26 f4       	brtc	.+8      	; 0xa46 <__addsf3+0x28>
     a3e:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>
     a42:	0e f4       	brtc	.+2      	; 0xa46 <__addsf3+0x28>
     a44:	e0 95       	com	r30
     a46:	e7 fb       	bst	r30, 7
     a48:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_inf>

00000a4c <__addsf3x>:
     a4c:	e9 2f       	mov	r30, r25
     a4e:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__fp_split3>
     a52:	58 f3       	brcs	.-42     	; 0xa2a <__addsf3+0xc>
     a54:	ba 17       	cp	r27, r26
     a56:	62 07       	cpc	r22, r18
     a58:	73 07       	cpc	r23, r19
     a5a:	84 07       	cpc	r24, r20
     a5c:	95 07       	cpc	r25, r21
     a5e:	20 f0       	brcs	.+8      	; 0xa68 <__addsf3x+0x1c>
     a60:	79 f4       	brne	.+30     	; 0xa80 <__addsf3x+0x34>
     a62:	a6 f5       	brtc	.+104    	; 0xacc <__addsf3x+0x80>
     a64:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_zero>
     a68:	0e f4       	brtc	.+2      	; 0xa6c <__addsf3x+0x20>
     a6a:	e0 95       	com	r30
     a6c:	0b 2e       	mov	r0, r27
     a6e:	ba 2f       	mov	r27, r26
     a70:	a0 2d       	mov	r26, r0
     a72:	0b 01       	movw	r0, r22
     a74:	b9 01       	movw	r22, r18
     a76:	90 01       	movw	r18, r0
     a78:	0c 01       	movw	r0, r24
     a7a:	ca 01       	movw	r24, r20
     a7c:	a0 01       	movw	r20, r0
     a7e:	11 24       	eor	r1, r1
     a80:	ff 27       	eor	r31, r31
     a82:	59 1b       	sub	r21, r25
     a84:	99 f0       	breq	.+38     	; 0xaac <__addsf3x+0x60>
     a86:	59 3f       	cpi	r21, 0xF9	; 249
     a88:	50 f4       	brcc	.+20     	; 0xa9e <__addsf3x+0x52>
     a8a:	50 3e       	cpi	r21, 0xE0	; 224
     a8c:	68 f1       	brcs	.+90     	; 0xae8 <__addsf3x+0x9c>
     a8e:	1a 16       	cp	r1, r26
     a90:	f0 40       	sbci	r31, 0x00	; 0
     a92:	a2 2f       	mov	r26, r18
     a94:	23 2f       	mov	r18, r19
     a96:	34 2f       	mov	r19, r20
     a98:	44 27       	eor	r20, r20
     a9a:	58 5f       	subi	r21, 0xF8	; 248
     a9c:	f3 cf       	rjmp	.-26     	; 0xa84 <__addsf3x+0x38>
     a9e:	46 95       	lsr	r20
     aa0:	37 95       	ror	r19
     aa2:	27 95       	ror	r18
     aa4:	a7 95       	ror	r26
     aa6:	f0 40       	sbci	r31, 0x00	; 0
     aa8:	53 95       	inc	r21
     aaa:	c9 f7       	brne	.-14     	; 0xa9e <__addsf3x+0x52>
     aac:	7e f4       	brtc	.+30     	; 0xacc <__addsf3x+0x80>
     aae:	1f 16       	cp	r1, r31
     ab0:	ba 0b       	sbc	r27, r26
     ab2:	62 0b       	sbc	r22, r18
     ab4:	73 0b       	sbc	r23, r19
     ab6:	84 0b       	sbc	r24, r20
     ab8:	ba f0       	brmi	.+46     	; 0xae8 <__addsf3x+0x9c>
     aba:	91 50       	subi	r25, 0x01	; 1
     abc:	a1 f0       	breq	.+40     	; 0xae6 <__addsf3x+0x9a>
     abe:	ff 0f       	add	r31, r31
     ac0:	bb 1f       	adc	r27, r27
     ac2:	66 1f       	adc	r22, r22
     ac4:	77 1f       	adc	r23, r23
     ac6:	88 1f       	adc	r24, r24
     ac8:	c2 f7       	brpl	.-16     	; 0xaba <__addsf3x+0x6e>
     aca:	0e c0       	rjmp	.+28     	; 0xae8 <__addsf3x+0x9c>
     acc:	ba 0f       	add	r27, r26
     ace:	62 1f       	adc	r22, r18
     ad0:	73 1f       	adc	r23, r19
     ad2:	84 1f       	adc	r24, r20
     ad4:	48 f4       	brcc	.+18     	; 0xae8 <__addsf3x+0x9c>
     ad6:	87 95       	ror	r24
     ad8:	77 95       	ror	r23
     ada:	67 95       	ror	r22
     adc:	b7 95       	ror	r27
     ade:	f7 95       	ror	r31
     ae0:	9e 3f       	cpi	r25, 0xFE	; 254
     ae2:	08 f0       	brcs	.+2      	; 0xae6 <__addsf3x+0x9a>
     ae4:	b0 cf       	rjmp	.-160    	; 0xa46 <__addsf3+0x28>
     ae6:	93 95       	inc	r25
     ae8:	88 0f       	add	r24, r24
     aea:	08 f0       	brcs	.+2      	; 0xaee <__addsf3x+0xa2>
     aec:	99 27       	eor	r25, r25
     aee:	ee 0f       	add	r30, r30
     af0:	97 95       	ror	r25
     af2:	87 95       	ror	r24
     af4:	08 95       	ret

00000af6 <__cmpsf2>:
     af6:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fp_cmp>
     afa:	08 f4       	brcc	.+2      	; 0xafe <__cmpsf2+0x8>
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	08 95       	ret

00000b00 <__divsf3>:
     b00:	0e 94 94 05 	call	0xb28	; 0xb28 <__divsf3x>
     b04:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_round>
     b08:	0e 94 25 07 	call	0xe4a	; 0xe4a <__fp_pscB>
     b0c:	58 f0       	brcs	.+22     	; 0xb24 <__divsf3+0x24>
     b0e:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__fp_pscA>
     b12:	40 f0       	brcs	.+16     	; 0xb24 <__divsf3+0x24>
     b14:	29 f4       	brne	.+10     	; 0xb20 <__divsf3+0x20>
     b16:	5f 3f       	cpi	r21, 0xFF	; 255
     b18:	29 f0       	breq	.+10     	; 0xb24 <__divsf3+0x24>
     b1a:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_inf>
     b1e:	51 11       	cpse	r21, r1
     b20:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>
     b24:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>

00000b28 <__divsf3x>:
     b28:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__fp_split3>
     b2c:	68 f3       	brcs	.-38     	; 0xb08 <__divsf3+0x8>

00000b2e <__divsf3_pse>:
     b2e:	99 23       	and	r25, r25
     b30:	b1 f3       	breq	.-20     	; 0xb1e <__divsf3+0x1e>
     b32:	55 23       	and	r21, r21
     b34:	91 f3       	breq	.-28     	; 0xb1a <__divsf3+0x1a>
     b36:	95 1b       	sub	r25, r21
     b38:	55 0b       	sbc	r21, r21
     b3a:	bb 27       	eor	r27, r27
     b3c:	aa 27       	eor	r26, r26
     b3e:	62 17       	cp	r22, r18
     b40:	73 07       	cpc	r23, r19
     b42:	84 07       	cpc	r24, r20
     b44:	38 f0       	brcs	.+14     	; 0xb54 <__divsf3_pse+0x26>
     b46:	9f 5f       	subi	r25, 0xFF	; 255
     b48:	5f 4f       	sbci	r21, 0xFF	; 255
     b4a:	22 0f       	add	r18, r18
     b4c:	33 1f       	adc	r19, r19
     b4e:	44 1f       	adc	r20, r20
     b50:	aa 1f       	adc	r26, r26
     b52:	a9 f3       	breq	.-22     	; 0xb3e <__divsf3_pse+0x10>
     b54:	35 d0       	rcall	.+106    	; 0xbc0 <__divsf3_pse+0x92>
     b56:	0e 2e       	mov	r0, r30
     b58:	3a f0       	brmi	.+14     	; 0xb68 <__divsf3_pse+0x3a>
     b5a:	e0 e8       	ldi	r30, 0x80	; 128
     b5c:	32 d0       	rcall	.+100    	; 0xbc2 <__divsf3_pse+0x94>
     b5e:	91 50       	subi	r25, 0x01	; 1
     b60:	50 40       	sbci	r21, 0x00	; 0
     b62:	e6 95       	lsr	r30
     b64:	00 1c       	adc	r0, r0
     b66:	ca f7       	brpl	.-14     	; 0xb5a <__divsf3_pse+0x2c>
     b68:	2b d0       	rcall	.+86     	; 0xbc0 <__divsf3_pse+0x92>
     b6a:	fe 2f       	mov	r31, r30
     b6c:	29 d0       	rcall	.+82     	; 0xbc0 <__divsf3_pse+0x92>
     b6e:	66 0f       	add	r22, r22
     b70:	77 1f       	adc	r23, r23
     b72:	88 1f       	adc	r24, r24
     b74:	bb 1f       	adc	r27, r27
     b76:	26 17       	cp	r18, r22
     b78:	37 07       	cpc	r19, r23
     b7a:	48 07       	cpc	r20, r24
     b7c:	ab 07       	cpc	r26, r27
     b7e:	b0 e8       	ldi	r27, 0x80	; 128
     b80:	09 f0       	breq	.+2      	; 0xb84 <__divsf3_pse+0x56>
     b82:	bb 0b       	sbc	r27, r27
     b84:	80 2d       	mov	r24, r0
     b86:	bf 01       	movw	r22, r30
     b88:	ff 27       	eor	r31, r31
     b8a:	93 58       	subi	r25, 0x83	; 131
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	3a f0       	brmi	.+14     	; 0xb9e <__divsf3_pse+0x70>
     b90:	9e 3f       	cpi	r25, 0xFE	; 254
     b92:	51 05       	cpc	r21, r1
     b94:	78 f0       	brcs	.+30     	; 0xbb4 <__divsf3_pse+0x86>
     b96:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_inf>
     b9a:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>
     b9e:	5f 3f       	cpi	r21, 0xFF	; 255
     ba0:	e4 f3       	brlt	.-8      	; 0xb9a <__divsf3_pse+0x6c>
     ba2:	98 3e       	cpi	r25, 0xE8	; 232
     ba4:	d4 f3       	brlt	.-12     	; 0xb9a <__divsf3_pse+0x6c>
     ba6:	86 95       	lsr	r24
     ba8:	77 95       	ror	r23
     baa:	67 95       	ror	r22
     bac:	b7 95       	ror	r27
     bae:	f7 95       	ror	r31
     bb0:	9f 5f       	subi	r25, 0xFF	; 255
     bb2:	c9 f7       	brne	.-14     	; 0xba6 <__divsf3_pse+0x78>
     bb4:	88 0f       	add	r24, r24
     bb6:	91 1d       	adc	r25, r1
     bb8:	96 95       	lsr	r25
     bba:	87 95       	ror	r24
     bbc:	97 f9       	bld	r25, 7
     bbe:	08 95       	ret
     bc0:	e1 e0       	ldi	r30, 0x01	; 1
     bc2:	66 0f       	add	r22, r22
     bc4:	77 1f       	adc	r23, r23
     bc6:	88 1f       	adc	r24, r24
     bc8:	bb 1f       	adc	r27, r27
     bca:	62 17       	cp	r22, r18
     bcc:	73 07       	cpc	r23, r19
     bce:	84 07       	cpc	r24, r20
     bd0:	ba 07       	cpc	r27, r26
     bd2:	20 f0       	brcs	.+8      	; 0xbdc <__divsf3_pse+0xae>
     bd4:	62 1b       	sub	r22, r18
     bd6:	73 0b       	sbc	r23, r19
     bd8:	84 0b       	sbc	r24, r20
     bda:	ba 0b       	sbc	r27, r26
     bdc:	ee 1f       	adc	r30, r30
     bde:	88 f7       	brcc	.-30     	; 0xbc2 <__divsf3_pse+0x94>
     be0:	e0 95       	com	r30
     be2:	08 95       	ret

00000be4 <__fixsfdi>:
     be4:	be e3       	ldi	r27, 0x3E	; 62
     be6:	04 d0       	rcall	.+8      	; 0xbf0 <__fixunssfdi+0x2>
     be8:	08 f4       	brcc	.+2      	; 0xbec <__fixsfdi+0x8>
     bea:	90 e8       	ldi	r25, 0x80	; 128
     bec:	08 95       	ret

00000bee <__fixunssfdi>:
     bee:	bf e3       	ldi	r27, 0x3F	; 63
     bf0:	22 27       	eor	r18, r18
     bf2:	33 27       	eor	r19, r19
     bf4:	a9 01       	movw	r20, r18
     bf6:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fp_splitA>
     bfa:	60 f1       	brcs	.+88     	; 0xc54 <__fixunssfdi+0x66>
     bfc:	9f 57       	subi	r25, 0x7F	; 127
     bfe:	48 f1       	brcs	.+82     	; 0xc52 <__fixunssfdi+0x64>
     c00:	b9 17       	cp	r27, r25
     c02:	40 f1       	brcs	.+80     	; 0xc54 <__fixunssfdi+0x66>
     c04:	bf e3       	ldi	r27, 0x3F	; 63
     c06:	b9 1b       	sub	r27, r25
     c08:	99 27       	eor	r25, r25
     c0a:	b8 50       	subi	r27, 0x08	; 8
     c0c:	3a f4       	brpl	.+14     	; 0xc1c <__fixunssfdi+0x2e>
     c0e:	66 0f       	add	r22, r22
     c10:	77 1f       	adc	r23, r23
     c12:	88 1f       	adc	r24, r24
     c14:	99 1f       	adc	r25, r25
     c16:	b3 95       	inc	r27
     c18:	d2 f3       	brmi	.-12     	; 0xc0e <__fixunssfdi+0x20>
     c1a:	16 c0       	rjmp	.+44     	; 0xc48 <__fixunssfdi+0x5a>
     c1c:	b8 50       	subi	r27, 0x08	; 8
     c1e:	4a f0       	brmi	.+18     	; 0xc32 <__fixunssfdi+0x44>
     c20:	23 2f       	mov	r18, r19
     c22:	34 2f       	mov	r19, r20
     c24:	45 2f       	mov	r20, r21
     c26:	56 2f       	mov	r21, r22
     c28:	67 2f       	mov	r22, r23
     c2a:	78 2f       	mov	r23, r24
     c2c:	88 27       	eor	r24, r24
     c2e:	b8 50       	subi	r27, 0x08	; 8
     c30:	ba f7       	brpl	.-18     	; 0xc20 <__fixunssfdi+0x32>
     c32:	b8 5f       	subi	r27, 0xF8	; 248
     c34:	49 f0       	breq	.+18     	; 0xc48 <__fixunssfdi+0x5a>
     c36:	86 95       	lsr	r24
     c38:	77 95       	ror	r23
     c3a:	67 95       	ror	r22
     c3c:	57 95       	ror	r21
     c3e:	47 95       	ror	r20
     c40:	37 95       	ror	r19
     c42:	27 95       	ror	r18
     c44:	ba 95       	dec	r27
     c46:	b9 f7       	brne	.-18     	; 0xc36 <__fixunssfdi+0x48>
     c48:	16 f4       	brtc	.+4      	; 0xc4e <__fixunssfdi+0x60>
     c4a:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_negdi>
     c4e:	88 94       	clc
     c50:	08 95       	ret
     c52:	88 94       	clc
     c54:	60 e0       	ldi	r22, 0x00	; 0
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	cb 01       	movw	r24, r22
     c5a:	08 95       	ret

00000c5c <__fixsfsi>:
     c5c:	0e 94 35 06 	call	0xc6a	; 0xc6a <__fixunssfsi>
     c60:	68 94       	set
     c62:	b1 11       	cpse	r27, r1
     c64:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>
     c68:	08 95       	ret

00000c6a <__fixunssfsi>:
     c6a:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fp_splitA>
     c6e:	88 f0       	brcs	.+34     	; 0xc92 <__fixunssfsi+0x28>
     c70:	9f 57       	subi	r25, 0x7F	; 127
     c72:	98 f0       	brcs	.+38     	; 0xc9a <__fixunssfsi+0x30>
     c74:	b9 2f       	mov	r27, r25
     c76:	99 27       	eor	r25, r25
     c78:	b7 51       	subi	r27, 0x17	; 23
     c7a:	b0 f0       	brcs	.+44     	; 0xca8 <__fixunssfsi+0x3e>
     c7c:	e1 f0       	breq	.+56     	; 0xcb6 <__fixunssfsi+0x4c>
     c7e:	66 0f       	add	r22, r22
     c80:	77 1f       	adc	r23, r23
     c82:	88 1f       	adc	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	1a f0       	brmi	.+6      	; 0xc8e <__fixunssfsi+0x24>
     c88:	ba 95       	dec	r27
     c8a:	c9 f7       	brne	.-14     	; 0xc7e <__fixunssfsi+0x14>
     c8c:	14 c0       	rjmp	.+40     	; 0xcb6 <__fixunssfsi+0x4c>
     c8e:	b1 30       	cpi	r27, 0x01	; 1
     c90:	91 f0       	breq	.+36     	; 0xcb6 <__fixunssfsi+0x4c>
     c92:	0e 94 77 07 	call	0xeee	; 0xeee <__fp_zero>
     c96:	b1 e0       	ldi	r27, 0x01	; 1
     c98:	08 95       	ret
     c9a:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_zero>
     c9e:	67 2f       	mov	r22, r23
     ca0:	78 2f       	mov	r23, r24
     ca2:	88 27       	eor	r24, r24
     ca4:	b8 5f       	subi	r27, 0xF8	; 248
     ca6:	39 f0       	breq	.+14     	; 0xcb6 <__fixunssfsi+0x4c>
     ca8:	b9 3f       	cpi	r27, 0xF9	; 249
     caa:	cc f3       	brlt	.-14     	; 0xc9e <__fixunssfsi+0x34>
     cac:	86 95       	lsr	r24
     cae:	77 95       	ror	r23
     cb0:	67 95       	ror	r22
     cb2:	b3 95       	inc	r27
     cb4:	d9 f7       	brne	.-10     	; 0xcac <__fixunssfsi+0x42>
     cb6:	3e f4       	brtc	.+14     	; 0xcc6 <__fixunssfsi+0x5c>
     cb8:	90 95       	com	r25
     cba:	80 95       	com	r24
     cbc:	70 95       	com	r23
     cbe:	61 95       	neg	r22
     cc0:	7f 4f       	sbci	r23, 0xFF	; 255
     cc2:	8f 4f       	sbci	r24, 0xFF	; 255
     cc4:	9f 4f       	sbci	r25, 0xFF	; 255
     cc6:	08 95       	ret

00000cc8 <__floatunsisf>:
     cc8:	e8 94       	clt
     cca:	09 c0       	rjmp	.+18     	; 0xcde <__floatsisf+0x12>

00000ccc <__floatsisf>:
     ccc:	97 fb       	bst	r25, 7
     cce:	3e f4       	brtc	.+14     	; 0xcde <__floatsisf+0x12>
     cd0:	90 95       	com	r25
     cd2:	80 95       	com	r24
     cd4:	70 95       	com	r23
     cd6:	61 95       	neg	r22
     cd8:	7f 4f       	sbci	r23, 0xFF	; 255
     cda:	8f 4f       	sbci	r24, 0xFF	; 255
     cdc:	9f 4f       	sbci	r25, 0xFF	; 255
     cde:	99 23       	and	r25, r25
     ce0:	a9 f0       	breq	.+42     	; 0xd0c <__floatsisf+0x40>
     ce2:	f9 2f       	mov	r31, r25
     ce4:	96 e9       	ldi	r25, 0x96	; 150
     ce6:	bb 27       	eor	r27, r27
     ce8:	93 95       	inc	r25
     cea:	f6 95       	lsr	r31
     cec:	87 95       	ror	r24
     cee:	77 95       	ror	r23
     cf0:	67 95       	ror	r22
     cf2:	b7 95       	ror	r27
     cf4:	f1 11       	cpse	r31, r1
     cf6:	f8 cf       	rjmp	.-16     	; 0xce8 <__floatsisf+0x1c>
     cf8:	fa f4       	brpl	.+62     	; 0xd38 <__floatsisf+0x6c>
     cfa:	bb 0f       	add	r27, r27
     cfc:	11 f4       	brne	.+4      	; 0xd02 <__floatsisf+0x36>
     cfe:	60 ff       	sbrs	r22, 0
     d00:	1b c0       	rjmp	.+54     	; 0xd38 <__floatsisf+0x6c>
     d02:	6f 5f       	subi	r22, 0xFF	; 255
     d04:	7f 4f       	sbci	r23, 0xFF	; 255
     d06:	8f 4f       	sbci	r24, 0xFF	; 255
     d08:	9f 4f       	sbci	r25, 0xFF	; 255
     d0a:	16 c0       	rjmp	.+44     	; 0xd38 <__floatsisf+0x6c>
     d0c:	88 23       	and	r24, r24
     d0e:	11 f0       	breq	.+4      	; 0xd14 <__floatsisf+0x48>
     d10:	96 e9       	ldi	r25, 0x96	; 150
     d12:	11 c0       	rjmp	.+34     	; 0xd36 <__floatsisf+0x6a>
     d14:	77 23       	and	r23, r23
     d16:	21 f0       	breq	.+8      	; 0xd20 <__floatsisf+0x54>
     d18:	9e e8       	ldi	r25, 0x8E	; 142
     d1a:	87 2f       	mov	r24, r23
     d1c:	76 2f       	mov	r23, r22
     d1e:	05 c0       	rjmp	.+10     	; 0xd2a <__floatsisf+0x5e>
     d20:	66 23       	and	r22, r22
     d22:	71 f0       	breq	.+28     	; 0xd40 <__floatsisf+0x74>
     d24:	96 e8       	ldi	r25, 0x86	; 134
     d26:	86 2f       	mov	r24, r22
     d28:	70 e0       	ldi	r23, 0x00	; 0
     d2a:	60 e0       	ldi	r22, 0x00	; 0
     d2c:	2a f0       	brmi	.+10     	; 0xd38 <__floatsisf+0x6c>
     d2e:	9a 95       	dec	r25
     d30:	66 0f       	add	r22, r22
     d32:	77 1f       	adc	r23, r23
     d34:	88 1f       	adc	r24, r24
     d36:	da f7       	brpl	.-10     	; 0xd2e <__floatsisf+0x62>
     d38:	88 0f       	add	r24, r24
     d3a:	96 95       	lsr	r25
     d3c:	87 95       	ror	r24
     d3e:	97 f9       	bld	r25, 7
     d40:	08 95       	ret

00000d42 <floor>:
     d42:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_trunc>
     d46:	90 f0       	brcs	.+36     	; 0xd6c <floor+0x2a>
     d48:	9f 37       	cpi	r25, 0x7F	; 127
     d4a:	48 f4       	brcc	.+18     	; 0xd5e <floor+0x1c>
     d4c:	91 11       	cpse	r25, r1
     d4e:	16 f0       	brts	.+4      	; 0xd54 <floor+0x12>
     d50:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	80 e8       	ldi	r24, 0x80	; 128
     d5a:	9f eb       	ldi	r25, 0xBF	; 191
     d5c:	08 95       	ret
     d5e:	26 f4       	brtc	.+8      	; 0xd68 <floor+0x26>
     d60:	1b 16       	cp	r1, r27
     d62:	61 1d       	adc	r22, r1
     d64:	71 1d       	adc	r23, r1
     d66:	81 1d       	adc	r24, r1
     d68:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_mintl>
     d6c:	0c 94 fd 06 	jmp	0xdfa	; 0xdfa <__fp_mpack>

00000d70 <__fp_cmp>:
     d70:	99 0f       	add	r25, r25
     d72:	00 08       	sbc	r0, r0
     d74:	55 0f       	add	r21, r21
     d76:	aa 0b       	sbc	r26, r26
     d78:	e0 e8       	ldi	r30, 0x80	; 128
     d7a:	fe ef       	ldi	r31, 0xFE	; 254
     d7c:	16 16       	cp	r1, r22
     d7e:	17 06       	cpc	r1, r23
     d80:	e8 07       	cpc	r30, r24
     d82:	f9 07       	cpc	r31, r25
     d84:	c0 f0       	brcs	.+48     	; 0xdb6 <__fp_cmp+0x46>
     d86:	12 16       	cp	r1, r18
     d88:	13 06       	cpc	r1, r19
     d8a:	e4 07       	cpc	r30, r20
     d8c:	f5 07       	cpc	r31, r21
     d8e:	98 f0       	brcs	.+38     	; 0xdb6 <__fp_cmp+0x46>
     d90:	62 1b       	sub	r22, r18
     d92:	73 0b       	sbc	r23, r19
     d94:	84 0b       	sbc	r24, r20
     d96:	95 0b       	sbc	r25, r21
     d98:	39 f4       	brne	.+14     	; 0xda8 <__fp_cmp+0x38>
     d9a:	0a 26       	eor	r0, r26
     d9c:	61 f0       	breq	.+24     	; 0xdb6 <__fp_cmp+0x46>
     d9e:	23 2b       	or	r18, r19
     da0:	24 2b       	or	r18, r20
     da2:	25 2b       	or	r18, r21
     da4:	21 f4       	brne	.+8      	; 0xdae <__fp_cmp+0x3e>
     da6:	08 95       	ret
     da8:	0a 26       	eor	r0, r26
     daa:	09 f4       	brne	.+2      	; 0xdae <__fp_cmp+0x3e>
     dac:	a1 40       	sbci	r26, 0x01	; 1
     dae:	a6 95       	lsr	r26
     db0:	8f ef       	ldi	r24, 0xFF	; 255
     db2:	81 1d       	adc	r24, r1
     db4:	81 1d       	adc	r24, r1
     db6:	08 95       	ret

00000db8 <__fp_inf>:
     db8:	97 f9       	bld	r25, 7
     dba:	9f 67       	ori	r25, 0x7F	; 127
     dbc:	80 e8       	ldi	r24, 0x80	; 128
     dbe:	70 e0       	ldi	r23, 0x00	; 0
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	08 95       	ret

00000dc4 <__fp_mintl>:
     dc4:	88 23       	and	r24, r24
     dc6:	71 f4       	brne	.+28     	; 0xde4 <__fp_mintl+0x20>
     dc8:	77 23       	and	r23, r23
     dca:	21 f0       	breq	.+8      	; 0xdd4 <__fp_mintl+0x10>
     dcc:	98 50       	subi	r25, 0x08	; 8
     dce:	87 2b       	or	r24, r23
     dd0:	76 2f       	mov	r23, r22
     dd2:	07 c0       	rjmp	.+14     	; 0xde2 <__fp_mintl+0x1e>
     dd4:	66 23       	and	r22, r22
     dd6:	11 f4       	brne	.+4      	; 0xddc <__fp_mintl+0x18>
     dd8:	99 27       	eor	r25, r25
     dda:	0d c0       	rjmp	.+26     	; 0xdf6 <__fp_mintl+0x32>
     ddc:	90 51       	subi	r25, 0x10	; 16
     dde:	86 2b       	or	r24, r22
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	2a f0       	brmi	.+10     	; 0xdf0 <__fp_mintl+0x2c>
     de6:	9a 95       	dec	r25
     de8:	66 0f       	add	r22, r22
     dea:	77 1f       	adc	r23, r23
     dec:	88 1f       	adc	r24, r24
     dee:	da f7       	brpl	.-10     	; 0xde6 <__fp_mintl+0x22>
     df0:	88 0f       	add	r24, r24
     df2:	96 95       	lsr	r25
     df4:	87 95       	ror	r24
     df6:	97 f9       	bld	r25, 7
     df8:	08 95       	ret

00000dfa <__fp_mpack>:
     dfa:	9f 3f       	cpi	r25, 0xFF	; 255
     dfc:	31 f0       	breq	.+12     	; 0xe0a <__fp_mpack_finite+0xc>

00000dfe <__fp_mpack_finite>:
     dfe:	91 50       	subi	r25, 0x01	; 1
     e00:	20 f4       	brcc	.+8      	; 0xe0a <__fp_mpack_finite+0xc>
     e02:	87 95       	ror	r24
     e04:	77 95       	ror	r23
     e06:	67 95       	ror	r22
     e08:	b7 95       	ror	r27
     e0a:	88 0f       	add	r24, r24
     e0c:	91 1d       	adc	r25, r1
     e0e:	96 95       	lsr	r25
     e10:	87 95       	ror	r24
     e12:	97 f9       	bld	r25, 7
     e14:	08 95       	ret

00000e16 <__fp_nan>:
     e16:	9f ef       	ldi	r25, 0xFF	; 255
     e18:	80 ec       	ldi	r24, 0xC0	; 192
     e1a:	08 95       	ret

00000e1c <__fp_negdi>:
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	60 95       	com	r22
     e24:	50 95       	com	r21
     e26:	40 95       	com	r20
     e28:	30 95       	com	r19
     e2a:	21 95       	neg	r18
     e2c:	3f 4f       	sbci	r19, 0xFF	; 255
     e2e:	4f 4f       	sbci	r20, 0xFF	; 255
     e30:	5f 4f       	sbci	r21, 0xFF	; 255
     e32:	6f 4f       	sbci	r22, 0xFF	; 255
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	8f 4f       	sbci	r24, 0xFF	; 255
     e38:	9f 4f       	sbci	r25, 0xFF	; 255
     e3a:	08 95       	ret

00000e3c <__fp_pscA>:
     e3c:	00 24       	eor	r0, r0
     e3e:	0a 94       	dec	r0
     e40:	16 16       	cp	r1, r22
     e42:	17 06       	cpc	r1, r23
     e44:	18 06       	cpc	r1, r24
     e46:	09 06       	cpc	r0, r25
     e48:	08 95       	ret

00000e4a <__fp_pscB>:
     e4a:	00 24       	eor	r0, r0
     e4c:	0a 94       	dec	r0
     e4e:	12 16       	cp	r1, r18
     e50:	13 06       	cpc	r1, r19
     e52:	14 06       	cpc	r1, r20
     e54:	05 06       	cpc	r0, r21
     e56:	08 95       	ret

00000e58 <__fp_round>:
     e58:	09 2e       	mov	r0, r25
     e5a:	03 94       	inc	r0
     e5c:	00 0c       	add	r0, r0
     e5e:	11 f4       	brne	.+4      	; 0xe64 <__fp_round+0xc>
     e60:	88 23       	and	r24, r24
     e62:	52 f0       	brmi	.+20     	; 0xe78 <__fp_round+0x20>
     e64:	bb 0f       	add	r27, r27
     e66:	40 f4       	brcc	.+16     	; 0xe78 <__fp_round+0x20>
     e68:	bf 2b       	or	r27, r31
     e6a:	11 f4       	brne	.+4      	; 0xe70 <__fp_round+0x18>
     e6c:	60 ff       	sbrs	r22, 0
     e6e:	04 c0       	rjmp	.+8      	; 0xe78 <__fp_round+0x20>
     e70:	6f 5f       	subi	r22, 0xFF	; 255
     e72:	7f 4f       	sbci	r23, 0xFF	; 255
     e74:	8f 4f       	sbci	r24, 0xFF	; 255
     e76:	9f 4f       	sbci	r25, 0xFF	; 255
     e78:	08 95       	ret

00000e7a <__fp_split3>:
     e7a:	57 fd       	sbrc	r21, 7
     e7c:	90 58       	subi	r25, 0x80	; 128
     e7e:	44 0f       	add	r20, r20
     e80:	55 1f       	adc	r21, r21
     e82:	59 f0       	breq	.+22     	; 0xe9a <__fp_splitA+0x10>
     e84:	5f 3f       	cpi	r21, 0xFF	; 255
     e86:	71 f0       	breq	.+28     	; 0xea4 <__fp_splitA+0x1a>
     e88:	47 95       	ror	r20

00000e8a <__fp_splitA>:
     e8a:	88 0f       	add	r24, r24
     e8c:	97 fb       	bst	r25, 7
     e8e:	99 1f       	adc	r25, r25
     e90:	61 f0       	breq	.+24     	; 0xeaa <__fp_splitA+0x20>
     e92:	9f 3f       	cpi	r25, 0xFF	; 255
     e94:	79 f0       	breq	.+30     	; 0xeb4 <__fp_splitA+0x2a>
     e96:	87 95       	ror	r24
     e98:	08 95       	ret
     e9a:	12 16       	cp	r1, r18
     e9c:	13 06       	cpc	r1, r19
     e9e:	14 06       	cpc	r1, r20
     ea0:	55 1f       	adc	r21, r21
     ea2:	f2 cf       	rjmp	.-28     	; 0xe88 <__fp_split3+0xe>
     ea4:	46 95       	lsr	r20
     ea6:	f1 df       	rcall	.-30     	; 0xe8a <__fp_splitA>
     ea8:	08 c0       	rjmp	.+16     	; 0xeba <__fp_splitA+0x30>
     eaa:	16 16       	cp	r1, r22
     eac:	17 06       	cpc	r1, r23
     eae:	18 06       	cpc	r1, r24
     eb0:	99 1f       	adc	r25, r25
     eb2:	f1 cf       	rjmp	.-30     	; 0xe96 <__fp_splitA+0xc>
     eb4:	86 95       	lsr	r24
     eb6:	71 05       	cpc	r23, r1
     eb8:	61 05       	cpc	r22, r1
     eba:	08 94       	sec
     ebc:	08 95       	ret

00000ebe <__fp_trunc>:
     ebe:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fp_splitA>
     ec2:	a0 f0       	brcs	.+40     	; 0xeec <__fp_trunc+0x2e>
     ec4:	be e7       	ldi	r27, 0x7E	; 126
     ec6:	b9 17       	cp	r27, r25
     ec8:	88 f4       	brcc	.+34     	; 0xeec <__fp_trunc+0x2e>
     eca:	bb 27       	eor	r27, r27
     ecc:	9f 38       	cpi	r25, 0x8F	; 143
     ece:	60 f4       	brcc	.+24     	; 0xee8 <__fp_trunc+0x2a>
     ed0:	16 16       	cp	r1, r22
     ed2:	b1 1d       	adc	r27, r1
     ed4:	67 2f       	mov	r22, r23
     ed6:	78 2f       	mov	r23, r24
     ed8:	88 27       	eor	r24, r24
     eda:	98 5f       	subi	r25, 0xF8	; 248
     edc:	f7 cf       	rjmp	.-18     	; 0xecc <__fp_trunc+0xe>
     ede:	86 95       	lsr	r24
     ee0:	77 95       	ror	r23
     ee2:	67 95       	ror	r22
     ee4:	b1 1d       	adc	r27, r1
     ee6:	93 95       	inc	r25
     ee8:	96 39       	cpi	r25, 0x96	; 150
     eea:	c8 f3       	brcs	.-14     	; 0xede <__fp_trunc+0x20>
     eec:	08 95       	ret

00000eee <__fp_zero>:
     eee:	e8 94       	clt

00000ef0 <__fp_szero>:
     ef0:	bb 27       	eor	r27, r27
     ef2:	66 27       	eor	r22, r22
     ef4:	77 27       	eor	r23, r23
     ef6:	cb 01       	movw	r24, r22
     ef8:	97 f9       	bld	r25, 7
     efa:	08 95       	ret

00000efc <__gesf2>:
     efc:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fp_cmp>
     f00:	08 f4       	brcc	.+2      	; 0xf04 <__gesf2+0x8>
     f02:	8f ef       	ldi	r24, 0xFF	; 255
     f04:	08 95       	ret

00000f06 <__mulsf3>:
     f06:	0e 94 96 07 	call	0xf2c	; 0xf2c <__mulsf3x>
     f0a:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_round>
     f0e:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__fp_pscA>
     f12:	38 f0       	brcs	.+14     	; 0xf22 <__mulsf3+0x1c>
     f14:	0e 94 25 07 	call	0xe4a	; 0xe4a <__fp_pscB>
     f18:	20 f0       	brcs	.+8      	; 0xf22 <__mulsf3+0x1c>
     f1a:	95 23       	and	r25, r21
     f1c:	11 f0       	breq	.+4      	; 0xf22 <__mulsf3+0x1c>
     f1e:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_inf>
     f22:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>
     f26:	11 24       	eor	r1, r1
     f28:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>

00000f2c <__mulsf3x>:
     f2c:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__fp_split3>
     f30:	70 f3       	brcs	.-36     	; 0xf0e <__mulsf3+0x8>

00000f32 <__mulsf3_pse>:
     f32:	95 9f       	mul	r25, r21
     f34:	c1 f3       	breq	.-16     	; 0xf26 <__mulsf3+0x20>
     f36:	95 0f       	add	r25, r21
     f38:	50 e0       	ldi	r21, 0x00	; 0
     f3a:	55 1f       	adc	r21, r21
     f3c:	62 9f       	mul	r22, r18
     f3e:	f0 01       	movw	r30, r0
     f40:	72 9f       	mul	r23, r18
     f42:	bb 27       	eor	r27, r27
     f44:	f0 0d       	add	r31, r0
     f46:	b1 1d       	adc	r27, r1
     f48:	63 9f       	mul	r22, r19
     f4a:	aa 27       	eor	r26, r26
     f4c:	f0 0d       	add	r31, r0
     f4e:	b1 1d       	adc	r27, r1
     f50:	aa 1f       	adc	r26, r26
     f52:	64 9f       	mul	r22, r20
     f54:	66 27       	eor	r22, r22
     f56:	b0 0d       	add	r27, r0
     f58:	a1 1d       	adc	r26, r1
     f5a:	66 1f       	adc	r22, r22
     f5c:	82 9f       	mul	r24, r18
     f5e:	22 27       	eor	r18, r18
     f60:	b0 0d       	add	r27, r0
     f62:	a1 1d       	adc	r26, r1
     f64:	62 1f       	adc	r22, r18
     f66:	73 9f       	mul	r23, r19
     f68:	b0 0d       	add	r27, r0
     f6a:	a1 1d       	adc	r26, r1
     f6c:	62 1f       	adc	r22, r18
     f6e:	83 9f       	mul	r24, r19
     f70:	a0 0d       	add	r26, r0
     f72:	61 1d       	adc	r22, r1
     f74:	22 1f       	adc	r18, r18
     f76:	74 9f       	mul	r23, r20
     f78:	33 27       	eor	r19, r19
     f7a:	a0 0d       	add	r26, r0
     f7c:	61 1d       	adc	r22, r1
     f7e:	23 1f       	adc	r18, r19
     f80:	84 9f       	mul	r24, r20
     f82:	60 0d       	add	r22, r0
     f84:	21 1d       	adc	r18, r1
     f86:	82 2f       	mov	r24, r18
     f88:	76 2f       	mov	r23, r22
     f8a:	6a 2f       	mov	r22, r26
     f8c:	11 24       	eor	r1, r1
     f8e:	9f 57       	subi	r25, 0x7F	; 127
     f90:	50 40       	sbci	r21, 0x00	; 0
     f92:	9a f0       	brmi	.+38     	; 0xfba <__mulsf3_pse+0x88>
     f94:	f1 f0       	breq	.+60     	; 0xfd2 <__mulsf3_pse+0xa0>
     f96:	88 23       	and	r24, r24
     f98:	4a f0       	brmi	.+18     	; 0xfac <__mulsf3_pse+0x7a>
     f9a:	ee 0f       	add	r30, r30
     f9c:	ff 1f       	adc	r31, r31
     f9e:	bb 1f       	adc	r27, r27
     fa0:	66 1f       	adc	r22, r22
     fa2:	77 1f       	adc	r23, r23
     fa4:	88 1f       	adc	r24, r24
     fa6:	91 50       	subi	r25, 0x01	; 1
     fa8:	50 40       	sbci	r21, 0x00	; 0
     faa:	a9 f7       	brne	.-22     	; 0xf96 <__mulsf3_pse+0x64>
     fac:	9e 3f       	cpi	r25, 0xFE	; 254
     fae:	51 05       	cpc	r21, r1
     fb0:	80 f0       	brcs	.+32     	; 0xfd2 <__mulsf3_pse+0xa0>
     fb2:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_inf>
     fb6:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_szero>
     fba:	5f 3f       	cpi	r21, 0xFF	; 255
     fbc:	e4 f3       	brlt	.-8      	; 0xfb6 <__mulsf3_pse+0x84>
     fbe:	98 3e       	cpi	r25, 0xE8	; 232
     fc0:	d4 f3       	brlt	.-12     	; 0xfb6 <__mulsf3_pse+0x84>
     fc2:	86 95       	lsr	r24
     fc4:	77 95       	ror	r23
     fc6:	67 95       	ror	r22
     fc8:	b7 95       	ror	r27
     fca:	f7 95       	ror	r31
     fcc:	e7 95       	ror	r30
     fce:	9f 5f       	subi	r25, 0xFF	; 255
     fd0:	c1 f7       	brne	.-16     	; 0xfc2 <__mulsf3_pse+0x90>
     fd2:	fe 2b       	or	r31, r30
     fd4:	88 0f       	add	r24, r24
     fd6:	91 1d       	adc	r25, r1
     fd8:	96 95       	lsr	r25
     fda:	87 95       	ror	r24
     fdc:	97 f9       	bld	r25, 7
     fde:	08 95       	ret

00000fe0 <__divmodhi4>:
     fe0:	97 fb       	bst	r25, 7
     fe2:	07 2e       	mov	r0, r23
     fe4:	16 f4       	brtc	.+4      	; 0xfea <__divmodhi4+0xa>
     fe6:	00 94       	com	r0
     fe8:	07 d0       	rcall	.+14     	; 0xff8 <__divmodhi4_neg1>
     fea:	77 fd       	sbrc	r23, 7
     fec:	09 d0       	rcall	.+18     	; 0x1000 <__divmodhi4_neg2>
     fee:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__udivmodhi4>
     ff2:	07 fc       	sbrc	r0, 7
     ff4:	05 d0       	rcall	.+10     	; 0x1000 <__divmodhi4_neg2>
     ff6:	3e f4       	brtc	.+14     	; 0x1006 <__divmodhi4_exit>

00000ff8 <__divmodhi4_neg1>:
     ff8:	90 95       	com	r25
     ffa:	81 95       	neg	r24
     ffc:	9f 4f       	sbci	r25, 0xFF	; 255
     ffe:	08 95       	ret

00001000 <__divmodhi4_neg2>:
    1000:	70 95       	com	r23
    1002:	61 95       	neg	r22
    1004:	7f 4f       	sbci	r23, 0xFF	; 255

00001006 <__divmodhi4_exit>:
    1006:	08 95       	ret

00001008 <__moddi3>:
    1008:	68 94       	set
    100a:	01 c0       	rjmp	.+2      	; 0x100e <__divdi3_moddi3>

0000100c <__divdi3>:
    100c:	e8 94       	clt

0000100e <__divdi3_moddi3>:
    100e:	f9 2f       	mov	r31, r25
    1010:	f1 2b       	or	r31, r17
    1012:	12 f0       	brmi	.+4      	; 0x1018 <__divdi3_moddi3+0xa>
    1014:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__udivdi3_umoddi3>
    1018:	a0 e0       	ldi	r26, 0x00	; 0
    101a:	b0 e0       	ldi	r27, 0x00	; 0
    101c:	e2 e1       	ldi	r30, 0x12	; 18
    101e:	f8 e0       	ldi	r31, 0x08	; 8
    1020:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__prologue_saves__+0xc>
    1024:	09 2e       	mov	r0, r25
    1026:	05 94       	asr	r0
    1028:	22 f4       	brpl	.+8      	; 0x1032 <__divdi3_moddi3+0x24>
    102a:	0e 94 94 08 	call	0x1128	; 0x1128 <__negdi2>
    102e:	11 23       	and	r17, r17
    1030:	92 f4       	brpl	.+36     	; 0x1056 <__divdi3_moddi3+0x48>
    1032:	f0 e8       	ldi	r31, 0x80	; 128
    1034:	0f 26       	eor	r0, r31
    1036:	ff ef       	ldi	r31, 0xFF	; 255
    1038:	e0 94       	com	r14
    103a:	f0 94       	com	r15
    103c:	00 95       	com	r16
    103e:	10 95       	com	r17
    1040:	b0 94       	com	r11
    1042:	c0 94       	com	r12
    1044:	d0 94       	com	r13
    1046:	a1 94       	neg	r10
    1048:	bf 0a       	sbc	r11, r31
    104a:	cf 0a       	sbc	r12, r31
    104c:	df 0a       	sbc	r13, r31
    104e:	ef 0a       	sbc	r14, r31
    1050:	ff 0a       	sbc	r15, r31
    1052:	0f 0b       	sbc	r16, r31
    1054:	1f 0b       	sbc	r17, r31
    1056:	0e 94 43 08 	call	0x1086	; 0x1086 <__udivmod64>
    105a:	07 fc       	sbrc	r0, 7
    105c:	0e 94 94 08 	call	0x1128	; 0x1128 <__negdi2>
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	ec e0       	ldi	r30, 0x0C	; 12
    1066:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__epilogue_restores__+0xc>

0000106a <__umoddi3>:
    106a:	68 94       	set
    106c:	01 c0       	rjmp	.+2      	; 0x1070 <__udivdi3_umoddi3>

0000106e <__udivdi3>:
    106e:	e8 94       	clt

00001070 <__udivdi3_umoddi3>:
    1070:	8f 92       	push	r8
    1072:	9f 92       	push	r9
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	0e 94 43 08 	call	0x1086	; 0x1086 <__udivmod64>
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	9f 90       	pop	r9
    1082:	8f 90       	pop	r8
    1084:	08 95       	ret

00001086 <__udivmod64>:
    1086:	88 24       	eor	r8, r8
    1088:	99 24       	eor	r9, r9
    108a:	f4 01       	movw	r30, r8
    108c:	e4 01       	movw	r28, r8
    108e:	b0 e4       	ldi	r27, 0x40	; 64
    1090:	9f 93       	push	r25
    1092:	aa 27       	eor	r26, r26
    1094:	9a 15       	cp	r25, r10
    1096:	8b 04       	cpc	r8, r11
    1098:	9c 04       	cpc	r9, r12
    109a:	ed 05       	cpc	r30, r13
    109c:	fe 05       	cpc	r31, r14
    109e:	cf 05       	cpc	r28, r15
    10a0:	d0 07       	cpc	r29, r16
    10a2:	a1 07       	cpc	r26, r17
    10a4:	98 f4       	brcc	.+38     	; 0x10cc <__udivmod64+0x46>
    10a6:	ad 2f       	mov	r26, r29
    10a8:	dc 2f       	mov	r29, r28
    10aa:	cf 2f       	mov	r28, r31
    10ac:	fe 2f       	mov	r31, r30
    10ae:	e9 2d       	mov	r30, r9
    10b0:	98 2c       	mov	r9, r8
    10b2:	89 2e       	mov	r8, r25
    10b4:	98 2f       	mov	r25, r24
    10b6:	87 2f       	mov	r24, r23
    10b8:	76 2f       	mov	r23, r22
    10ba:	65 2f       	mov	r22, r21
    10bc:	54 2f       	mov	r21, r20
    10be:	43 2f       	mov	r20, r19
    10c0:	32 2f       	mov	r19, r18
    10c2:	22 27       	eor	r18, r18
    10c4:	b8 50       	subi	r27, 0x08	; 8
    10c6:	31 f7       	brne	.-52     	; 0x1094 <__udivmod64+0xe>
    10c8:	bf 91       	pop	r27
    10ca:	27 c0       	rjmp	.+78     	; 0x111a <__udivmod64+0x94>
    10cc:	1b 2e       	mov	r1, r27
    10ce:	bf 91       	pop	r27
    10d0:	bb 27       	eor	r27, r27
    10d2:	22 0f       	add	r18, r18
    10d4:	33 1f       	adc	r19, r19
    10d6:	44 1f       	adc	r20, r20
    10d8:	55 1f       	adc	r21, r21
    10da:	66 1f       	adc	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	88 1c       	adc	r8, r8
    10e4:	99 1c       	adc	r9, r9
    10e6:	ee 1f       	adc	r30, r30
    10e8:	ff 1f       	adc	r31, r31
    10ea:	cc 1f       	adc	r28, r28
    10ec:	dd 1f       	adc	r29, r29
    10ee:	aa 1f       	adc	r26, r26
    10f0:	bb 1f       	adc	r27, r27
    10f2:	8a 14       	cp	r8, r10
    10f4:	9b 04       	cpc	r9, r11
    10f6:	ec 05       	cpc	r30, r12
    10f8:	fd 05       	cpc	r31, r13
    10fa:	ce 05       	cpc	r28, r14
    10fc:	df 05       	cpc	r29, r15
    10fe:	a0 07       	cpc	r26, r16
    1100:	b1 07       	cpc	r27, r17
    1102:	48 f0       	brcs	.+18     	; 0x1116 <__udivmod64+0x90>
    1104:	8a 18       	sub	r8, r10
    1106:	9b 08       	sbc	r9, r11
    1108:	ec 09       	sbc	r30, r12
    110a:	fd 09       	sbc	r31, r13
    110c:	ce 09       	sbc	r28, r14
    110e:	df 09       	sbc	r29, r15
    1110:	a0 0b       	sbc	r26, r16
    1112:	b1 0b       	sbc	r27, r17
    1114:	21 60       	ori	r18, 0x01	; 1
    1116:	1a 94       	dec	r1
    1118:	e1 f6       	brne	.-72     	; 0x10d2 <__udivmod64+0x4c>
    111a:	2e f4       	brtc	.+10     	; 0x1126 <__udivmod64+0xa0>
    111c:	94 01       	movw	r18, r8
    111e:	af 01       	movw	r20, r30
    1120:	be 01       	movw	r22, r28
    1122:	cd 01       	movw	r24, r26
    1124:	00 0c       	add	r0, r0
    1126:	08 95       	ret

00001128 <__negdi2>:
    1128:	60 95       	com	r22
    112a:	70 95       	com	r23
    112c:	80 95       	com	r24
    112e:	90 95       	com	r25
    1130:	30 95       	com	r19
    1132:	40 95       	com	r20
    1134:	50 95       	com	r21
    1136:	21 95       	neg	r18
    1138:	3f 4f       	sbci	r19, 0xFF	; 255
    113a:	4f 4f       	sbci	r20, 0xFF	; 255
    113c:	5f 4f       	sbci	r21, 0xFF	; 255
    113e:	6f 4f       	sbci	r22, 0xFF	; 255
    1140:	7f 4f       	sbci	r23, 0xFF	; 255
    1142:	8f 4f       	sbci	r24, 0xFF	; 255
    1144:	9f 4f       	sbci	r25, 0xFF	; 255
    1146:	08 95       	ret

00001148 <__prologue_saves__>:
    1148:	2f 92       	push	r2
    114a:	3f 92       	push	r3
    114c:	4f 92       	push	r4
    114e:	5f 92       	push	r5
    1150:	6f 92       	push	r6
    1152:	7f 92       	push	r7
    1154:	8f 92       	push	r8
    1156:	9f 92       	push	r9
    1158:	af 92       	push	r10
    115a:	bf 92       	push	r11
    115c:	cf 92       	push	r12
    115e:	df 92       	push	r13
    1160:	ef 92       	push	r14
    1162:	ff 92       	push	r15
    1164:	0f 93       	push	r16
    1166:	1f 93       	push	r17
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	cd b7       	in	r28, 0x3d	; 61
    116e:	de b7       	in	r29, 0x3e	; 62
    1170:	ca 1b       	sub	r28, r26
    1172:	db 0b       	sbc	r29, r27
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	f8 94       	cli
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	0f be       	out	0x3f, r0	; 63
    117c:	cd bf       	out	0x3d, r28	; 61
    117e:	09 94       	ijmp

00001180 <__epilogue_restores__>:
    1180:	2a 88       	ldd	r2, Y+18	; 0x12
    1182:	39 88       	ldd	r3, Y+17	; 0x11
    1184:	48 88       	ldd	r4, Y+16	; 0x10
    1186:	5f 84       	ldd	r5, Y+15	; 0x0f
    1188:	6e 84       	ldd	r6, Y+14	; 0x0e
    118a:	7d 84       	ldd	r7, Y+13	; 0x0d
    118c:	8c 84       	ldd	r8, Y+12	; 0x0c
    118e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1190:	aa 84       	ldd	r10, Y+10	; 0x0a
    1192:	b9 84       	ldd	r11, Y+9	; 0x09
    1194:	c8 84       	ldd	r12, Y+8	; 0x08
    1196:	df 80       	ldd	r13, Y+7	; 0x07
    1198:	ee 80       	ldd	r14, Y+6	; 0x06
    119a:	fd 80       	ldd	r15, Y+5	; 0x05
    119c:	0c 81       	ldd	r16, Y+4	; 0x04
    119e:	1b 81       	ldd	r17, Y+3	; 0x03
    11a0:	aa 81       	ldd	r26, Y+2	; 0x02
    11a2:	b9 81       	ldd	r27, Y+1	; 0x01
    11a4:	ce 0f       	add	r28, r30
    11a6:	d1 1d       	adc	r29, r1
    11a8:	0f b6       	in	r0, 0x3f	; 63
    11aa:	f8 94       	cli
    11ac:	de bf       	out	0x3e, r29	; 62
    11ae:	0f be       	out	0x3f, r0	; 63
    11b0:	cd bf       	out	0x3d, r28	; 61
    11b2:	ed 01       	movw	r28, r26
    11b4:	08 95       	ret

000011b6 <__adddi3_s8>:
    11b6:	00 24       	eor	r0, r0
    11b8:	a7 fd       	sbrc	r26, 7
    11ba:	00 94       	com	r0
    11bc:	2a 0f       	add	r18, r26
    11be:	30 1d       	adc	r19, r0
    11c0:	40 1d       	adc	r20, r0
    11c2:	50 1d       	adc	r21, r0
    11c4:	60 1d       	adc	r22, r0
    11c6:	70 1d       	adc	r23, r0
    11c8:	80 1d       	adc	r24, r0
    11ca:	90 1d       	adc	r25, r0
    11cc:	08 95       	ret

000011ce <__cmpdi2>:
    11ce:	2a 15       	cp	r18, r10
    11d0:	3b 05       	cpc	r19, r11
    11d2:	4c 05       	cpc	r20, r12
    11d4:	5d 05       	cpc	r21, r13
    11d6:	6e 05       	cpc	r22, r14
    11d8:	7f 05       	cpc	r23, r15
    11da:	80 07       	cpc	r24, r16
    11dc:	91 07       	cpc	r25, r17
    11de:	08 95       	ret

000011e0 <__cmpdi2_s8>:
    11e0:	00 24       	eor	r0, r0
    11e2:	a7 fd       	sbrc	r26, 7
    11e4:	00 94       	com	r0
    11e6:	2a 17       	cp	r18, r26
    11e8:	30 05       	cpc	r19, r0
    11ea:	40 05       	cpc	r20, r0
    11ec:	50 05       	cpc	r21, r0
    11ee:	60 05       	cpc	r22, r0
    11f0:	70 05       	cpc	r23, r0
    11f2:	80 05       	cpc	r24, r0
    11f4:	90 05       	cpc	r25, r0
    11f6:	08 95       	ret

000011f8 <__udivmodhi4>:
    11f8:	aa 1b       	sub	r26, r26
    11fa:	bb 1b       	sub	r27, r27
    11fc:	51 e1       	ldi	r21, 0x11	; 17
    11fe:	07 c0       	rjmp	.+14     	; 0x120e <__udivmodhi4_ep>

00001200 <__udivmodhi4_loop>:
    1200:	aa 1f       	adc	r26, r26
    1202:	bb 1f       	adc	r27, r27
    1204:	a6 17       	cp	r26, r22
    1206:	b7 07       	cpc	r27, r23
    1208:	10 f0       	brcs	.+4      	; 0x120e <__udivmodhi4_ep>
    120a:	a6 1b       	sub	r26, r22
    120c:	b7 0b       	sbc	r27, r23

0000120e <__udivmodhi4_ep>:
    120e:	88 1f       	adc	r24, r24
    1210:	99 1f       	adc	r25, r25
    1212:	5a 95       	dec	r21
    1214:	a9 f7       	brne	.-22     	; 0x1200 <__udivmodhi4_loop>
    1216:	80 95       	com	r24
    1218:	90 95       	com	r25
    121a:	bc 01       	movw	r22, r24
    121c:	cd 01       	movw	r24, r26
    121e:	08 95       	ret

00001220 <_exit>:
    1220:	f8 94       	cli

00001222 <__stop_program>:
    1222:	ff cf       	rjmp	.-2      	; 0x1222 <__stop_program>
